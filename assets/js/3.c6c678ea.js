(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{608:function(t,s,a){t.exports=a.p+"assets/img/image-20220903195122617.9f298dc5.png"},609:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-21 22.16.18.4d3d03a3.png"},610:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-21 22.55.41.c39974f5.png"},611:function(t,s,a){t.exports=a.p+"assets/img/image-20211021213413082.0a1637be.png"},612:function(t,s,a){t.exports=a.p+"assets/img/image-20211021213423883.7d6a1050.png"},613:function(t,s,a){t.exports=a.p+"assets/img/image-20211021215032857.5dc752af.png"},614:function(t,s,a){t.exports=a.p+"assets/img/image-20211021215041246.c0b21e4f.png"},615:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.30.10.84010d32.png"},616:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.32.49.cd8efe85.png"},617:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.36.24.4778f476.png"},618:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.38.19.eea1395d.png"},619:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.39.11.b3a2e0f6.png"},620:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.46.22.d535045b.png"},621:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.47.26.46d95fb0.png"},622:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.48.06.61fd9c1c.png"},623:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.50.16.b4881111.png"},624:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.51.10.d6491983.png"},625:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.52.01.52ac4feb.png"},626:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.52.28.1d96c4c2.png"},627:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 13.53.17.67221453.png"},628:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 14.05.40.2ebe8461.png"},629:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 14.05.58.defdcce8.png"},630:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 14.08.09.2e607ee0.png"},631:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 14.09.11.70b7788d.png"},632:function(t,s,a){t.exports=a.p+"assets/img/image-20220904092441371.2a05dabd.png"},633:function(t,s,a){t.exports=a.p+"assets/img/image-20211022000751746.3dfb508d.png"},634:function(t,s,a){t.exports=a.p+"assets/img/image-20211022121129201.484be4fb.png"},635:function(t,s,a){t.exports=a.p+"assets/img/image-20211022122514593.6defcfa5.png"},636:function(t,s,a){t.exports=a.p+"assets/img/image-20220905145229840.13f06466.png"},637:function(t,s,a){t.exports=a.p+"assets/img/image-20220905194244579.98f5e568.png"},638:function(t,s,a){t.exports=a.p+"assets/img/image-20220905194457224.8c9f326b.png"},639:function(t,s,a){t.exports=a.p+"assets/img/image-20220905194621140.1113ada1.png"},640:function(t,s,a){t.exports=a.p+"assets/img/image-20220905215704579.19e66c95.png"},641:function(t,s,a){t.exports=a.p+"assets/img/image-20220905215802489.f761904b.png"},642:function(t,s,a){t.exports=a.p+"assets/img/image-20220905215939313.41d4456e.png"},643:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 14.18.02.76678895.png"},644:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-22 14.21.40.35101655.png"},645:function(t,s,a){t.exports=a.p+"assets/img/image-20220908143740781.26d7e772.png"},646:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 18.23.54.34af5e0f.png"},647:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 18.26.06.0aa47094.png"},648:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 18.29.50.7e5f2542.png"},649:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 18.31.15.2ae6c850.png"},650:function(t,s,a){t.exports=a.p+"assets/img/image-20220908145412006.7d5d1e4f.png"},651:function(t,s,a){t.exports=a.p+"assets/img/image-20220908145417338.c907fb54.png"},652:function(t,s,a){t.exports=a.p+"assets/img/image-20220908145422202.ec08c02b.png"},653:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 20.31.49.052b1e12.png"},654:function(t,s,a){t.exports=a.p+"assets/img/image-20220910065644155.8414eb96.png"},655:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 20.41.43.64f25390.png"},656:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-27 20.42.09.2ccade0c.png"},657:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.30.16.eda7f272.png"},658:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.31.34.ccddcba7.png"},659:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.32.28.b9b656aa.png"},660:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.33.42.58ce4adb.png"},661:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.49.24.350b2cc1.png"},662:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.49.59.893398d3.png"},663:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 13.58.07.8220d0ed.png"},664:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 14.02.03.1b4a398e.png"},665:function(t,s,a){t.exports=a.p+"assets/img/image-20220910123527428.2f959cb9.png"},666:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 14.12.36.ec235ded.png"},667:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 14.57.37.fd5ef519.png"},668:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 15.00.10.0472bfc1.png"},669:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 15.03.22.ae494f41.png"},670:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 15.03.40.cc2f0a5d.png"},671:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 15.04.41.abe5c3e8.png"},672:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 16.38.15.094b5273.png"},673:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 16.53.08.fcbaf854.png"},674:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 17.02.50.2862f91a.png"},675:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 17.21.46.458b7041.png"},676:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 20.02.32.ae77a6ea.png"},677:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-30 20.08.04.cbc14b6b.png"},678:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 14.09.52.af4f9d4a.png"},679:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 14.12.16.a5cb7921.png"},680:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 14.15.31-16660020778797.c2b8cac9.png"},681:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 14.21.25.66ff75a6.png"},682:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 14.15.31.c2b8cac9.png"},683:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 14.42.26.93186b62.png"},684:function(t,s,a){t.exports=a.p+"assets/img/image-20220909104246443.c5d332fe.png"},685:function(t,s,a){t.exports=a.p+"assets/img/image-20220909104335139.9e915224.png"},686:function(t,s,a){t.exports=a.p+"assets/img/image-20220909165340676.1ae1a45e.png"},687:function(t,s,a){t.exports=a.p+"assets/img/image-20220909175049552.7f860ebe.png"},688:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 15.02.58.28ca72f6.png"},689:function(t,s,a){t.exports=a.p+"assets/img/截屏2021-10-31 15.18.09.6d57b788.png"},690:function(t,s,a){t.exports=a.p+"assets/img/image-20220911223657493.629c354d.png"},704:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 是一个开源的 "),s("em",[s("strong",[t._v("key-value")])]),t._v(" 存储系统。")]),t._v(" "),s("p",[t._v("和 "),s("em",[s("strong",[t._v("Memcached")])]),t._v(" 类似，它支持存储的 "),s("em",[s("strong",[t._v("value")])]),t._v(" 类型相对更多，包括 "),s("em",[s("strong",[t._v("string、list、set、zset、sorted set、hash")])]),t._v("。")])]),t._v(" "),s("h1",{attrs:{id:"redis相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis相关知识"}},[t._v("#")]),t._v(" Redis相关知识")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 是典型的 "),s("em",[s("strong",[t._v("NoSQL")])]),t._v(" 数据库。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("redis官网")])]),t._v("：https://redis.io/download")]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 是一个开源的 "),s("em",[s("strong",[t._v("key-value")])]),t._v(" 存储系统。")]),t._v(" "),s("p",[t._v("和 "),s("em",[s("strong",[t._v("Memcached")])]),t._v(" 类似，它支持存储的 "),s("em",[s("strong",[t._v("value")])]),t._v(" 类型相对更多，包括 "),s("em",[s("strong",[t._v("string、list、set、zset、sorted set、hash")])]),t._v("。")]),t._v(" "),s("p",[t._v("这些数据类型都支持 "),s("em",[s("strong",[t._v("push/pop、add/remove")])]),t._v(" 及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。但事务的操作不遵循mysql中的原子性")]),t._v(" "),s("p",[t._v("在此基础上，"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 支持各种不同方式的排序。")]),t._v(" "),s("p",[t._v("与 ***memcached***一样，为了保证效率，数据都是缓存在内存中。")]),t._v(" "),s("p",[t._v("区别的是 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件。")]),t._v(" "),s("p",[t._v("并且在此基础上实现了***master-slave*** （主从）同步。")]),t._v(" "),s("p",[t._v("单线程 + "),s("em",[s("strong",[t._v("IO")])]),t._v(" 多路复用。")])]),t._v(" "),s("p",[s("strong",[t._v("单线程 + IO多路复用：")])]),t._v(" "),s("p",[s("strong",[t._v("从普通的每个人排队买票，变成每个人把买票任务交给黄牛，当黄牛暂时还没有买到票的时候，这些人可以去做其他的事情，当黄牛买到票的时候马上把票给买票人，类似于这种情况。相当于买票的人不用浪费排队的时间，用这些时间可以来做其他事，而黄牛承担一个一直排队的任务，这样提高效率。")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(608),alt:"image-20220903195122617"}})]),t._v(" "),s("p",[s("strong",[t._v("redis与memcache的三点不同：支持多数据类型，支持持久化，单线程+多路IO复用，")])]),t._v(" "),s("p",[s("strong",[t._v("并且：")])]),t._v(" "),s("p",[s("strong",[t._v("memcache：多线程+锁")])]),t._v(" "),s("p",[s("strong",[t._v("redis：单线程+多路IO复用  来实现多线程的效果，并且其效率比多线程高")])]),t._v(" "),s("blockquote",[s("p",[t._v("默认16个数据库，类似数组下标从0开始，初始默认使用0号库")]),t._v(" "),s("p",[t._v("使用命令 select  "),s("dbid",[t._v("来切换数据库。如: select 8")])],1),t._v(" "),s("p",[t._v("统一密码管理，所有库同样密码。")]),t._v(" "),s("p",[t._v("dbsize 查看当前数据库的key的数量")]),t._v(" "),s("p",[t._v("flushdb 清空当前库")]),t._v(" "),s("p",[t._v("flushall 通杀全部库")])]),t._v(" "),s("h1",{attrs:{id:"安装和启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装和启动"}},[t._v("#")]),t._v(" 安装和启动")]),t._v(" "),s("blockquote",[s("p",[t._v("安装 "),s("em",[s("strong",[t._v("C")])]),t._v(" 语言的编译环境")]),t._v(" "),s("div",{staticClass:"language-base extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install centos-release-scl scl-utils-build\nyum install -y devtoolset-8-toolchain\nscl enable devtoolset-8 bash\n")])])]),s("p",[t._v("通过 "),s("em",[s("strong",[t._v("wget")])]),t._v(" 下载")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("wget https://download.redis.io/releases/redis-6.2.6.tar.gz\n\n// 下载路径：/opt\n")])])]),s("p",[t._v("解压至当前目录")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("tar -zxvf redis-6.2.6.tar.gz \n")])])]),s("p",[t._v("解压完成后进入目录")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd redis-6.2.6\n")])])]),s("p",[t._v("在当前目录下执行 "),s("em",[s("strong",[t._v("make")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("make &&  make install\n")])])]),s("p",[t._v("默认安装在 "),s("code",[t._v("/usr/local/bin")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(609)}}),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("redis-benchmark：性能测试工具，可以在自己本子运行，看看自己本子性能如何\nredis-check-aof：修复有问题的AOF文件，rdb和aof后面讲\nredis-check-dump：修复有问题的dump.rdb文件\nredis-sentinel：Redis集群使用\nredis-server：Redis服务器启动命令\nredis-cli：客户端，操作入口\n")])])]),s("p",[t._v("前台启动：***/usr/local/bin*** 目录下启动 "),s("em",[s("strong",[t._v("redis")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("redis-server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("前台启动"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("后台启动：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("安装 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 的目录 "),s("em",[s("strong",[t._v("/opt/redis-6.2.6")])]),t._v(" 中将 "),s("em",[s("strong",[t._v("redis.conf")])]),t._v(" 复制到任意一个文件夹下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cp redis.conf /etc/redis.conf\n// 将redis.conf复制到/etc/下\n")])])])]),t._v(" "),s("li",[s("p",[t._v("修改 "),s("em",[s("strong",[t._v("/etc/redis.conf")])]),t._v(" 配置文件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" redis.conf\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# daemonize no 修改为 daemonize yes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把默认不支持后台启动改为支持后台启动")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(610)}})]),t._v(" "),s("li",[s("p",[s("em",[s("strong",[t._v("/usr/local/bin")])]),t._v(" 目录下启动 "),s("em",[s("strong",[t._v("redis")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("redis-server /etc/redis.conf\n")])])])])]),t._v(" "),s("p",[t._v("关闭 "),s("em",[s("strong",[t._v("redis")])])]),t._v(" "),s("ul",[s("li",[s("em",[s("strong",[t._v("kill")])]),t._v(" 进程")]),t._v(" "),s("li",[t._v("命令 "),s("em",[s("strong",[t._v("shutdown")])])])])]),t._v(" "),s("p",[s("u",[s("strong",[t._v("默认端口号：6379")])])]),t._v(" "),s("h1",{attrs:{id:"nosql数据库相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nosql数据库相关知识"}},[t._v("#")]),t._v(" NoSQL数据库相关知识")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("解决 "),s("em",[s("strong",[t._v("CPU")])]),t._v(" 及内存压力")]),t._v(" "),s("img",{attrs:{src:a(611)}})]),t._v(" "),s("li",[s("p",[t._v("解决 "),s("em",[s("strong",[t._v("IO")])]),t._v(" 压力")]),t._v(" "),s("img",{attrs:{src:a(612)}})])]),t._v(" "),s("p",[t._v("***NoSQL（ NoSQL = Not Only SQL ）***，意即不仅仅是 "),s("em",[s("strong",[t._v("SQL")])]),t._v("，"),s("strong",[t._v("泛指非关系型的数据库")]),t._v("。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("NoSQL")])]),t._v(" 不依赖业务逻辑方式存储，而以简单的 "),s("em",[s("strong",[t._v("key-value")])]),t._v(" 模式存储。因此大大的增加了数据库的扩展能力。")]),t._v(" "),s("ul",[s("li",[t._v("不遵循 "),s("em",[s("strong",[t._v("SQL")])]),t._v(" 标准。")]),t._v(" "),s("li",[t._v("不支持 "),s("em",[s("strong",[t._v("ACID")])]),t._v("。但不指不支持事务")]),t._v(" "),s("li",[t._v("远超于 "),s("em",[s("strong",[t._v("SQL")])]),t._v(" 的性能。")])]),t._v(" "),s("p",[s("strong",[t._v("适用于的场景")])]),t._v(" "),s("ul",[s("li",[t._v("对数据高并发的读写；")]),t._v(" "),s("li",[t._v("海量数据的读写；")]),t._v(" "),s("li",[t._v("对数据高可扩展性的。")])]),t._v(" "),s("p",[s("strong",[t._v("不适用的场景")])]),t._v(" "),s("ul",[s("li",[t._v("需要事务支持；")]),t._v(" "),s("li",[t._v("基于 "),s("em",[s("strong",[t._v("sql")])]),t._v(" 的结构化查询存储，处理复杂的关系，需要即席查询。")]),t._v(" "),s("li",[t._v("用不着sql和用了sql也不行的情况，可以考虑nosql")])]),t._v(" "),s("p",[t._v("常见的 "),s("em",[s("strong",[t._v("NoSQL")])]),t._v(" 数据库")]),t._v(" "),s("ul",[s("li",[t._v("Redis")]),t._v(" "),s("li",[t._v("MongoDB")])]),t._v(" "),s("p",[t._v("大数据时代常用的数据库类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("行式数据库")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(613)}})]),t._v(" "),s("li",[s("p",[t._v("列式数据库")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(614)}})])]),t._v(" "),s("h1",{attrs:{id:"关于配置文件的解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于配置文件的解释"}},[t._v("#")]),t._v(" 关于配置文件的解释")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("redis.conf")])])]),t._v(" "),s("h2",{attrs:{id:"units"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#units"}},[t._v("#")]),t._v(" "),s("em",[s("strong",[t._v("Units")])])]),t._v(" "),s("blockquote",[s("p",[t._v("单位，配置大小单位，开头定义了一些基本的度量单位，只支持 "),s("em",[s("strong",[t._v("bytes")])]),t._v("，不支持 "),s("em",[s("strong",[t._v("bit")])]),t._v("。")]),t._v(" "),s("p",[t._v("大小写不敏感。")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(615)}}),t._v(" "),s("h2",{attrs:{id:"includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[t._v("#")]),t._v(" "),s("em",[s("strong",[t._v("INCLUDES")])])]),t._v(" "),s("blockquote",[s("p",[t._v("包含，多实例的情况可以把公用的配置文件提取出来。")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(616)}}),t._v(" "),s("h2",{attrs:{id:"network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[t._v("#")]),t._v(" "),s("em",[s("strong",[t._v("NETWORK")])])]),t._v(" "),s("blockquote",[s("p",[t._v("网络相关配置。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("bind")])])]),t._v(" "),s("p",[t._v("默认情况 "),s("code",[t._v("bind=127.0.0.1")]),t._v(" 只能接受本机的访问请求。")]),t._v(" "),s("p",[t._v("不写的情况下，无限制接受任何 "),s("em",[s("strong",[t._v("ip")])]),t._v(" 地址的访问。")]),t._v(" "),s("p",[t._v("生产环境肯定要写你应用服务器的地址，服务器是需要远程访问的，"),s("em",[s("u",[t._v("所以需要将其注释掉")])]),t._v("。")]),t._v(" "),s("p",[t._v("如果开启了***protected-mode***，那么在没有设定 "),s("em",[s("strong",[t._v("bind ip")])]),t._v(" 且没有设密码的情况下，"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 只允许接受本机的响应。远程访问需要改成 Protected-mode no")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(617)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("protected-mode")])])]),t._v(" "),s("p",[t._v("将本机访问保护模式设置 "),s("em",[s("strong",[t._v("no")])]),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(618)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("port")])])]),t._v(" "),s("p",[t._v("端口号，默认 "),s("em",[s("strong",[t._v("6379")])]),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(619),alt:"截屏2021-10-22 13.39.11"}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("tcp-backlog")])])]),t._v(" "),s("p",[t._v("设置 "),s("em",[s("strong",[t._v("tcp")])]),t._v(" 的 "),s("em",[s("strong",[t._v("backlog")])]),t._v("，"),s("em",[s("strong",[t._v("backlog")])]),t._v(" 其实是一个连接队列，"),s("em",[s("strong",[t._v("backlog")])]),t._v(" 队列总和 $=$ 未完成三次握手队列 $+$ 已经完成三次握手队列。")]),t._v(" "),s("p",[t._v("在高并发环境下你需要一个高 "),s("em",[s("strong",[t._v("backlog")])]),t._v(" 值来避免慢客户端连接问题。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(620)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("timeout")])])]),t._v(" "),s("p",[t._v("一个空闲的客户端维持多少秒会关闭，0 表示关闭该功能。即永不关闭。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(621)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("tcp-keepalive")])])]),t._v(" "),s("p",[t._v("对访问客户端的一种心跳检测，每个 "),s("em",[s("strong",[t._v("n")])]),t._v(" 秒检测一次。")]),t._v(" "),s("p",[t._v("单位为秒，如果设置为 0，则不会进行 "),s("em",[s("strong",[t._v("Keepalive")])]),t._v(" 检测，建议设置成 60。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(622)}})]),t._v(" "),s("h2",{attrs:{id:"general"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[t._v("#")]),t._v(" "),s("em",[s("strong",[t._v("GENERAL")])])]),t._v(" "),s("blockquote",[s("p",[t._v("通用。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("daemonize")])])]),t._v(" "),s("p",[t._v("是否为后台进程，设置为 "),s("em",[s("strong",[t._v("yes")])]),t._v("。")]),t._v(" "),s("p",[t._v("守护进程，后台启动。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(623),alt:""}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("pidfile")])])]),t._v(" "),s("p",[t._v("pid:Process Identifier,进程识别号")]),t._v(" "),s("p",[t._v("存放 "),s("em",[s("strong",[t._v("pid")])]),t._v(" 文件的位置，每个实例会产生一个不同的 "),s("em",[s("strong",[t._v("pid")])]),t._v(" 文件。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(624),alt:""}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("loglevel")])])]),t._v(" "),s("p",[t._v("指定日志记录级别，"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 总共支持四个级别："),s("em",[s("strong",[t._v("debug、verbose、notice、warning")])]),t._v("，默认为 "),s("em",[s("strong",[t._v("notice")])]),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(625)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("logfile")])])]),t._v(" "),s("p",[t._v("日志文件名称。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(626),alt:""}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("database")])])]),t._v(" "),s("p",[t._v("设定库的数量 默认16，默认数据库为 0，可以使用 "),s("code",[t._v("SELECT <dbid>")]),t._v(" 命令在连接上指定数据库 "),s("em",[s("strong",[t._v("id")])]),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(627),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"security"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#security"}},[t._v("#")]),t._v(" "),s("em",[s("strong",[t._v("SECURITY")])])]),t._v(" "),s("blockquote",[s("p",[t._v("安全。")]),t._v(" "),s("p",[t._v("访问密码的查看、设置和取消。")]),t._v(" "),s("p",[t._v("在命令中设置密码，只是临时的。重启 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 服务器，密码就还原了。")]),t._v(" "),s("p",[t._v("永久设置，需要在配置文件中进行设置。")])]),t._v(" "),s("h2",{attrs:{id:"limits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limits"}},[t._v("#")]),t._v(" "),s("em",[s("strong",[t._v("LIMITS")])])]),t._v(" "),s("p",[t._v("备注：新版设置客户端数在CLIENTS里，设置内存在MEMORY MANAGEMENT里")]),t._v(" "),s("blockquote",[s("p",[t._v("限制。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("maxclients")])])]),t._v(" "),s("p",[t._v("设置 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 同时可以与多少个客户端进行连接。")]),t._v(" "),s("p",[t._v("默认情况下为 "),s("em",[s("strong",[t._v("10000")])]),t._v(" 个客户端。")]),t._v(" "),s("p",[t._v("如果达到了此限制，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 则会拒绝新的连接请求，并且向这些连接请求方发出 "),s("em",[s("strong",[t._v("max number of clients reached")])]),t._v(" 以作回应。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(628)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("maxmemory")])])]),t._v(" "),s("p",[t._v("建议"),s("strong",[t._v("必须设置")]),t._v("，否则，将内存占满，造成服务器宕机。")]),t._v(" "),s("p",[t._v("设置 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 可以使用的内存量。一旦到达内存使用上限，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 将会试图移除内部数据，移除规则可以通过 "),s("em",[s("strong",[t._v("maxmemory-policy")])]),t._v(" 来指定。")]),t._v(" "),s("p",[t._v("如果 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 无法根据移除规则来移除内存中的数据，或者设置了不允许移除，那么 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 则会针对那些需要申请内存的指令返回错误信息，比如 "),s("em",[s("strong",[t._v("SET、LPUSH")])]),t._v(" 等。")]),t._v(" "),s("p",[t._v("但是对于无内存申请的指令，仍然会正常响应，比如 "),s("em",[s("strong",[t._v("GET")])]),t._v(" 等。如果你的 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 是主 "),s("em",[s("strong",[t._v("redis")])]),t._v("（ 说明你的 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 有从 "),s("em",[s("strong",[t._v("redis")])]),t._v(" ），那么在设置内存使用上限时，需要在系统中留出一些内存空间给同步队列缓存，只有在你设置的是“不移除”的情况下，才不用考虑这个因素。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(629)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("maxmemory-policy")])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("volatile-lru")])]),t._v("：使用 "),s("em",[s("strong",[t._v("LRU")])]),t._v(" 算法移除 "),s("em",[s("strong",[t._v("key")])]),t._v("，只对设置了过期时间的键（最近最少使用）。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("allkeys-lru")])]),t._v("：在所有集合 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中，使用 "),s("em",[s("strong",[t._v("LRU")])]),t._v(" 算法移除 "),s("em",[s("strong",[t._v("key")])]),t._v("。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("volatile-random")])]),t._v("：在过期集合中移除随机的 "),s("em",[s("strong",[t._v("key")])]),t._v("，只对设置了过期时间的键。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("allkeys-random")])]),t._v("：在所有集合 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中，移除随机的 "),s("em",[s("strong",[t._v("key")])]),t._v("。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("volatile-ttl")])]),t._v("：移除那些 "),s("em",[s("strong",[t._v("TTL")])]),t._v(" 值最小的 "),s("em",[s("strong",[t._v("key")])]),t._v("，即那些最近要过期的 "),s("em",[s("strong",[t._v("key")])]),t._v("。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("noeviction")])]),t._v("：不进行移除。针对写操作，只是返回错误信息。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(630)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("maxmemory-samples")])])]),t._v(" "),s("p",[t._v("设置样本数量，"),s("em",[s("strong",[t._v("LRU")])]),t._v(" 算法和最小 "),s("em",[s("strong",[t._v("TTL")])]),t._v(" 算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 默认会检查这么多个 "),s("em",[s("strong",[t._v("key")])]),t._v(" 并选择其中 "),s("em",[s("strong",[t._v("LRU")])]),t._v(" 的那个。")]),t._v(" "),s("p",[t._v("一般设置 3 到 7 的数字，数值越小样本越不准确，但性能消耗越小。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(631)}})]),t._v(" "),s("h1",{attrs:{id:"常用五大value基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用五大value基本数据类型"}},[t._v("#")]),t._v(" 常用五大Value基本数据类型")]),t._v(" "),s("h2",{attrs:{id:"前备知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前备知识"}},[t._v("#")]),t._v(" 前备知识")]),t._v(" "),s("h3",{attrs:{id:"key操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key操作"}},[t._v("#")]),t._v(" key操作")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("keys *")]),t._v("：查看当前库所有 "),s("em",[s("strong",[t._v("key")])])]),t._v(" "),s("p",[s("code",[t._v("exists key")]),t._v("：判断某个 "),s("em",[s("strong",[t._v("key")])]),t._v(" 是否存在")]),t._v(" "),s("p",[s("code",[t._v("type key")]),t._v("：查看你的 "),s("em",[s("strong",[t._v("key")])]),t._v(" 是什么类型")]),t._v(" "),s("p",[s("code",[t._v("del key")]),t._v(" ：删除指定的 "),s("em",[s("strong",[t._v("key")])]),t._v(" 数据")]),t._v(" "),s("p",[s("code",[t._v("unlink key")]),t._v("：根据 "),s("em",[s("strong",[t._v("value")])]),t._v(" 选择非阻塞删除，仅将 "),s("em",[s("strong",[t._v("keys")])]),t._v(" 从 "),s("em",[s("strong",[t._v("keyspace")])]),t._v(" 元数据中删除，真正的删除会在后续"),s("strong",[t._v("异步操作")])]),t._v(" "),s("p",[s("code",[t._v("expire key 10")]),t._v(" ：为给定的 "),s("em",[s("strong",[t._v("key")])]),t._v(" 设置过期时间")]),t._v(" "),s("p",[s("code",[t._v("ttl key")]),t._v("：查看还有多少秒过期，-1表示永不过期，-2表示已过期")])]),t._v(" "),s("h3",{attrs:{id:"数据库操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[t._v("#")]),t._v(" 数据库操作")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("select")]),t._v("：命令切换数据库")]),t._v(" "),s("p",[s("code",[t._v("dbsize")]),t._v("：查看当前数据库的 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的数量")]),t._v(" "),s("p",[s("code",[t._v("flushdb")]),t._v("：清空当前库")]),t._v(" "),s("p",[s("code",[t._v("flushall")]),t._v("：通杀全部库")])]),t._v(" "),s("h3",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ol",[s("li",[t._v("同类型+同key名可以覆盖，不同类型+同key名会报错")])]),t._v(" "),s("h2",{attrs:{id:"字符串-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串-string"}},[t._v("#")]),t._v(" 字符串（String）")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("String")])]),t._v(" 类型是二进制安全的。意味着 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 的 "),s("em",[s("strong",[t._v("string")])]),t._v(" 可以包含任何数据。比如 "),s("em",[s("strong",[t._v("jpg")])]),t._v(" 图片或者序列化的对象。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("String")])]),t._v(" 类型是 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 最基本的数据类型，一个 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 中字符串类型的 "),s("em",[s("strong",[t._v("value")])]),t._v(" 最多可以是 512M。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("set <key> <value>")]),t._v("：添加键值对，设置相同的key会覆盖之前的value")]),t._v(" "),s("p",[s("code",[t._v("get <key>")]),t._v("：查询对应键值")]),t._v(" "),s("p",[s("code",[t._v("append <key> <value>")]),t._v("：将给定的 "),s("em",[s("strong",[t._v("<value>")])]),t._v(" 追加到原值的末尾")]),t._v(" "),s("p",[s("code",[t._v("strlen <key>")]),t._v("：获得值的长度")]),t._v(" "),s("p",[s("code",[t._v("setnx <key> <value>")]),t._v("：（Set No Exist）只有在 "),s("em",[s("strong",[t._v("key")])]),t._v(" 不存在时，设置 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的值")]),t._v(" "),s("p",[s("code",[t._v("incr <key>")]),t._v("：将 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中储存的数字值增 1，只能对数字值操作，如果为空，新增值为 1（"),s("strong",[s("u",[t._v("具有原子性")])]),t._v("）")]),t._v(" "),s("p",[s("code",[t._v("decr <key>")]),t._v("：将 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中储存的数字值减 1，只能对数字值操作，如果为空，新增值为 -1")]),t._v(" "),s("p",[s("code",[t._v("incrby/decrby <key><步长>")]),t._v("：将 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中储存的数字值增减。自定义步长")]),t._v(" "),s("p",[s("code",[t._v("mset <key1> <value1> <key2> <value2>")]),t._v(" ：同时设置一个或多个 "),s("em",[s("strong",[t._v("key-value")])]),t._v(" 对")]),t._v(" "),s("p",[s("code",[t._v("mget <key1> <key2> <key3>...")]),t._v("：同时获取一个或多个 "),s("em",[s("strong",[t._v("value")])])]),t._v(" "),s("p",[s("code",[t._v("msetnx <key1> <value1> <key2> <value2>...")]),t._v("：同时设置一个或多个 "),s("em",[s("strong",[t._v("key-value")])]),t._v(" 对，当且仅当所有给定 "),s("em",[s("strong",[t._v("key")])]),t._v(" 都不存在")]),t._v(" "),s("p",[s("code",[t._v("getrange <key> <起始位置> <结束位置>")]),t._v("：获得value指定下标范围内的值")]),t._v(" "),s("p",[s("code",[t._v("setrange <key> <起始位置> <value>")]),t._v("：用 "),s("em",[s("strong",[t._v("<value>")])]),t._v(" 覆写 "),s("em",[s("strong",[t._v("<key>")])]),t._v(" 所储存的字符串值")]),t._v(" "),s("p",[s("code",[t._v("setex <key> <过期时间> <value>")]),t._v("：设置键值的同时，设置过期时间，单位秒。")]),t._v(" "),s("p",[s("code",[t._v("getset <key> <value>")]),t._v("：以新换旧，设置了新值同时获得旧值。")])]),t._v(" "),s("p",[s("strong",[t._v("原子性")]),t._v("(并非事务中的原子性，而是redis特有的原子性)")]),t._v(" "),s("p",[t._v("所谓 "),s("strong",[t._v("原子")]),t._v(" 操作是指不会被线程调度机制打断的操作；")]),t._v(" "),s("p",[t._v("这种操作一旦开始，就一直运行到结束，中间不会有任何 "),s("em",[s("strong",[t._v("context switch")])]),t._v(" （切换到另一个线程）。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v('在单线程中， 能够在单条指令中完成的操作都可以认为是"原子操作"，因为中断只能发生于指令之间。')])])]),t._v(" "),s("li",[s("p",[t._v("在多线程中（例如java中多线程对i进行i++【i=i+1】），不能被其它进程（线程）打断的操作就叫原子操作。"),s("img",{attrs:{src:a(632),alt:"image-20220904092441371"}})])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 单命令的原子性主要得益于 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 的单线程。")]),t._v(" "),s("p",[s("strong",[t._v("String的数据结构")])]),t._v(" "),s("p",[t._v("内部结构实现上类似于 "),s("em",[s("strong",[t._v("Java")])]),t._v(" 的 "),s("em",[s("strong",[t._v("ArrayList")])]),t._v("，采用预分配冗余空间的方式来减少内存的频繁分配.")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(633)}}),t._v(" "),s("p",[t._v("如图中所示，内部为当前字符串实际分配的空间capacity一般要高于实际字符串长度len。当字符")]),t._v(" "),s("p",[t._v("串长度小于1M时，扩容都是加倍现有的空间，如果超过1M，扩容时一次只会多扩1M的空间。需要注")]),t._v(" "),s("p",[t._v("意的是字符串最大长度为512M。")]),t._v(" "),s("h2",{attrs:{id:"列表-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表-list"}},[t._v("#")]),t._v(" 列表（List）")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。")]),t._v(" "),s("p",[t._v("它的底层实际是个双向链表，对两端的操作性能很高，通过索引下标的操作中间的节点性能会较差。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(634)}}),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("lpush/rpush <key><value1><value2><value3> ....")]),t._v("： 从左边/右边插入一个或多个值。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("lpush k1 v1 v2 v3\nlrange k1 0 -1\n输出：v3 v2 v1\n\nrpush k1 v1 v2 v3\nrrange k1 0 -1  （0，-1）表示取所有的值\n输出：v1 v2 v3\n")])])]),s("p",[s("code",[t._v("lpop/rpop <key>")]),t._v("：从左边/右边吐出一个值。值在键在，值光键亡。")]),t._v(" "),s("p",[s("code",[t._v("rpoplpush <key1><key2>")]),t._v("：从 "),s("em",[s("strong",[t._v("<key1>")])]),t._v(" 列表右边吐出一个值，插到 "),s("em",[s("strong",[t._v("<key2>")])]),t._v(" 列表左边。")]),t._v(" "),s("p",[s("code",[t._v("lrange <key><start><stop>")]),t._v("：按照索引下标获得元素（从左到右）")]),t._v(" "),s("p",[s("code",[t._v("lrange mylist 0 -1 0")]),t._v("：左边第一个，-1右边第一个，（0 -1表示获取所有）")]),t._v(" "),s("p",[s("code",[t._v("lindex <key><index>")]),t._v("：按照索引下标获得元素（从左到右）")]),t._v(" "),s("p",[s("code",[t._v("llen <key>")]),t._v("：获得列表长度")]),t._v(" "),s("p",[s("code",[t._v("linsert <key> before/after <value> <newvalue>")]),t._v("：在 "),s("em",[s("strong",[t._v("<value>")])]),t._v(" 的前面/后面插入 "),s("em",[s("strong",[t._v("<newvalue>")])]),t._v(" 插入值")]),t._v(" "),s("p",[s("code",[t._v("lrem <key><n><value>")]),t._v("：从左边删除 "),s("em",[s("strong",[t._v("n")])]),t._v(" 个 "),s("em",[s("strong",[t._v("value")])]),t._v("（从左到右）")]),t._v(" "),s("p",[s("code",[t._v("lset<key><index><value>")]),t._v("：将列表 "),s("em",[s("strong",[t._v("key")])]),t._v(" 下标为 "),s("em",[s("strong",[t._v("index")])]),t._v(" 的值替换成 "),s("em",[s("strong",[t._v("value")])])])]),t._v(" "),s("p",[s("strong",[t._v("数据结构")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("List")])]),t._v(" 的数据结构为快速链表 "),s("em",[s("strong",[t._v("quickList")])]),t._v("。")]),t._v(" "),s("p",[t._v("首先在列表元素较少的情况下会使用一块连续的内存存储，这个结构是 "),s("em",[s("strong",[t._v("ziplist")])]),t._v("，也即是压缩列表。")]),t._v(" "),s("p",[t._v("它将所有的元素紧挨着一起存储，分配的是一块连续的内存。")]),t._v(" "),s("p",[t._v("当数据量比较多的时候才会改成 "),s("em",[s("strong",[t._v("quicklist")])]),t._v("。")]),t._v(" "),s("p",[t._v("因为普通的链表需要的附加指针空间太大，会比较浪费空间。比如这个列表里存的只是 "),s("em",[s("strong",[t._v("int")])]),t._v(" 类型的数据，结构上还需要两个额外的指针 "),s("em",[s("strong",[t._v("prev")])]),t._v(" 和 "),s("em",[s("strong",[t._v("next")])]),t._v("。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 将链表和 "),s("em",[s("strong",[t._v("ziplist")])]),t._v(" 结合起来组成了 "),s("em",[s("strong",[t._v("quicklist")])]),t._v("。也就是将多个 "),s("em",[s("strong",[t._v("ziplist")])]),t._v(" 使用双向指针串起来使用。这样既满足了快速的插入删除性能，又不会出现太大的空间冗余。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(635)}}),t._v(" "),s("h2",{attrs:{id:"set-集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-集合"}},[t._v("#")]),t._v(" Set（集合）")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Set")])]),t._v(" 对外提供的功能与 "),s("em",[s("strong",[t._v("List")])]),t._v(" 类似列表的功能，特殊之处在于 "),s("em",[s("strong",[t._v("Set")])]),t._v(" 是可以 "),s("strong",[s("u",[t._v("自动排重")])]),t._v(" 的，当需要存储一个列表数据，又不希望出现重复数据时，"),s("em",[s("strong",[t._v("Set")])]),t._v(" 是一个很好的选择，并且 "),s("em",[s("strong",[t._v("Set")])]),t._v(" 提供了判断某个成员是否在一个 "),s("em",[s("strong",[t._v("Set")])]),t._v(" 集合内的重要接口，这个也是 "),s("em",[s("strong",[t._v("List")])]),t._v(" 所不能提供的。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 的 "),s("em",[s("strong",[t._v("Set")])]),t._v(" 是 "),s("em",[s("strong",[t._v("String")])]),t._v(" 类型的无序集合。它底层其实是一个 "),s("em",[s("strong",[t._v("value")])]),t._v(" 为 "),s("em",[s("strong",[t._v("null")])]),t._v(" 的 "),s("em",[s("strong",[t._v("hash")])]),t._v(" 表，所以添加，删除，查找的复杂度都是 ***O(1)***。")]),t._v(" "),s("p",[t._v("一个算法，随着数据的增加，执行时间的长短，如果是 ***O(1)***，数据增加，查找数据的时间不变。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("sadd <key><value1><value2> .....")]),t._v("：将一个或多个 "),s("em",[s("strong",[t._v("member")])]),t._v(" 元素加入到集合 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中，已经存在的 "),s("em",[s("strong",[t._v("member")])]),t._v(" 元素将被忽略")]),t._v(" "),s("p",[s("code",[t._v("smembers <key>")]),t._v("：取出该集合的所有值。")]),t._v(" "),s("p",[s("code",[t._v("sismember <key><value>")]),t._v("：判断集合 "),s("em",[s("strong",[t._v("<key>")])]),t._v(" 是否为含有该 "),s("em",[s("strong",[t._v("<value>")])]),t._v(" 值，有返回 1，没有返回 0")]),t._v(" "),s("p",[s("code",[t._v("scard<key>")]),t._v("：返回该集合的元素个数。")]),t._v(" "),s("p",[s("code",[t._v("srem <key><value1><value2> ....")]),t._v("：删除集合中的某个元素")]),t._v(" "),s("p",[s("code",[t._v("spop <key>")]),t._v("：随机从该集合中吐出一个值")]),t._v(" "),s("p",[s("code",[t._v("srandmember <key><n>")]),t._v("：随机从该集合中取出 "),s("em",[s("strong",[t._v("n")])]),t._v(" 个值，不会从集合中删除")]),t._v(" "),s("p",[s("code",[t._v("smove <source><destination>value")]),t._v("：把集合中一个值从一个集合移动到另一个集合")]),t._v(" "),s("p",[s("code",[t._v("sinter <key1><key2>")]),t._v("：返回两个集合的交集元素")]),t._v(" "),s("p",[s("code",[t._v("sunion <key1><key2>")]),t._v("：返回两个集合的并集元素")]),t._v(" "),s("p",[s("code",[t._v("sdiff <key1><key2>")]),t._v("：返回两个集合的差集元素（"),s("em",[s("strong",[t._v("key1")])]),t._v(" 中的，不包含 "),s("em",[s("strong",[t._v("key2")])]),t._v(" 中的）")])]),t._v(" "),s("p",[s("strong",[t._v("数据结构")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Set")])]),t._v(" 数据结构是字典，字典是用哈希表实现的。")]),t._v(" "),s("h2",{attrs:{id:"hash-哈希"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希"}},[t._v("#")]),t._v(" Hash（哈希）")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis hash")])]),t._v(" 是一个键值对集合。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis hash")])]),t._v(" 是一个 "),s("em",[s("strong",[t._v("String")])]),t._v(" 类型的 "),s("em",[s("strong",[t._v("field")])]),t._v(" 和 "),s("em",[s("strong",[t._v("value")])]),t._v(" 的映射表，"),s("em",[s("strong",[t._v("hash")])]),t._v(" 特别"),s("strong",[t._v("适合用于存储对象")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("hset <key><field><value>")]),t._v("：给 "),s("em",[s("strong",[t._v("<key>")])]),t._v(" 集合中的 "),s("em",[s("strong",[t._v("<field>")])]),t._v(" 键赋值 "),s("em",[s("strong",[t._v("<value>")])])]),t._v(" "),s("p",[s("code",[t._v("hget <key1><field>")]),t._v("：从 "),s("em",[s("strong",[t._v("<key1>")])]),t._v(" 集合 "),s("em",[s("strong",[t._v("<field>")])]),t._v(" 取出 "),s("em",[s("strong",[t._v("value")])])]),t._v(" "),s("p",[s("code",[t._v("hmset <key1><field1><value1><field2><value2>...")]),t._v("： 批量设置 "),s("em",[s("strong",[t._v("hash")])]),t._v(" 的值")]),t._v(" "),s("p",[s("code",[t._v("hexists <key1><field>")]),t._v("：查看哈希表 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中，给定域 "),s("em",[s("strong",[t._v("field")])]),t._v(" 是否存在")]),t._v(" "),s("p",[s("code",[t._v("hkeys <key>")]),t._v("：列出该 "),s("em",[s("strong",[t._v("hash")])]),t._v(" 集合的所有 "),s("em",[s("strong",[t._v("field")])])]),t._v(" "),s("p",[s("code",[t._v("hvals <key>")]),t._v("：列出该 "),s("em",[s("strong",[t._v("hash")])]),t._v(" 集合的所有 "),s("em",[s("strong",[t._v("value")])])]),t._v(" "),s("p",[s("code",[t._v("hincrby <key><field><increment>")]),t._v("：为哈希表 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中的域 "),s("em",[s("strong",[t._v("field")])]),t._v(" 的值加上增量 n")]),t._v(" "),s("p",[s("code",[t._v("hsetnx <key><field><value>")]),t._v("：将哈希表 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中的域 "),s("em",[s("strong",[t._v("field")])]),t._v(" 的值设置为 "),s("em",[s("strong",[t._v("value")])]),t._v(" ，当且仅当域 "),s("em",[s("strong",[t._v("field")])]),t._v(" 不存在")])]),t._v(" "),s("p",[s("strong",[t._v("数据结构")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Hash")])]),t._v(" 类型对应的数据结构是两种："),s("em",[s("strong",[t._v("ziplist")])]),t._v("（压缩列表），"),s("em",[s("strong",[t._v("hashtable")])]),t._v("（哈希表）。")]),t._v(" "),s("p",[t._v("当 "),s("em",[s("strong",[t._v("field-value")])]),t._v(" 长度较短且个数较少时，使用 "),s("em",[s("strong",[t._v("ziplist")])]),t._v("，否则使用 "),s("em",[s("strong",[t._v("hashtable")])]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"zset-有序集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zset-有序集合"}},[t._v("#")]),t._v(" Zset（有序集合）")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 有序集合 "),s("em",[s("strong",[t._v("zset")])]),t._v(" 与普通集合 "),s("em",[s("strong",[t._v("set")])]),t._v(" 非常相似，是一个没有重复元素的字符串集合。")]),t._v(" "),s("p",[t._v("不同之处是有序集合的每个成员都关联了一个评分（"),s("em",[s("strong",[t._v("score")])]),t._v("）,这个评分（"),s("em",[s("strong",[t._v("score")])]),t._v("）被用来按照从最低分到最高分的方式排序集合中的成员。集合的成员是唯一的，但是评分可以是重复的。")]),t._v(" "),s("p",[t._v("因为元素是有序的，所以可以很快的根据评分（"),s("em",[s("strong",[t._v("score")])]),t._v("）或者次序（"),s("em",[s("strong",[t._v("position")])]),t._v("）来获取一个范围的元素。")]),t._v(" "),s("p",[t._v("访问有序集合的中间元素也是非常快的，因此能够使用有序集合作为一个没有重复成员的智能列表。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("zadd <key><score1><value1><score2><value2>…")]),t._v("：将一个或多个 "),s("em",[s("strong",[t._v("member")])]),t._v(" 元素及其 "),s("em",[s("strong",[t._v("score")])]),t._v(" 值加入到有序集 "),s("em",[s("strong",[t._v("key")])]),t._v(" 当中")]),t._v(" "),s("p",[s("code",[t._v("zrange <key><start><stop> [WITHSCORES]")]),t._v("：返回有序集 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中，下标在 "),s("em",[s("strong",[t._v("<start><stop>")])]),t._v(" 之间的元素，当带 "),s("em",[s("strong",[t._v("WITHSCORES")])]),t._v("，可以让分数一起和值返回到结果集")]),t._v(" "),s("p",[s("code",[t._v("zrangebyscore key min max [withscores] [limit offset count]")]),t._v("：返回有序集 "),s("em",[s("strong",[t._v("key")])]),t._v(" 中，所有 "),s("em",[s("strong",[t._v("score")])]),t._v(" 值介于 "),s("em",[s("strong",[t._v("min")])]),t._v(" 和 "),s("em",[s("strong",[t._v("max")])]),t._v(" 之间（包括等于 "),s("em",[s("strong",[t._v("min")])]),t._v(" 或 "),s("em",[s("strong",[t._v("max")])]),t._v(" ）的成员。有序集成员按 "),s("em",[s("strong",[t._v("score")])]),t._v(" 值递增（从小到大）次序排列。")]),t._v(" "),s("p",[s("code",[t._v("zrevrangebyscore key max min [withscores] [limit offset count]")]),t._v("：同上，改为从大到小排列")]),t._v(" "),s("p",[s("code",[t._v("zincrby <key><increment><value>")]),t._v("：为元素的 "),s("em",[s("strong",[t._v("score")])]),t._v(" 加上增量")]),t._v(" "),s("p",[s("code",[t._v("zrem <key><value>")]),t._v("：删除该集合下，指定值的元素")]),t._v(" "),s("p",[s("code",[t._v("zcount <key><min><max>")]),t._v("：统计该集合，分数区间内的元素个数")]),t._v(" "),s("p",[s("code",[t._v("zrank <key><value>")]),t._v("：返回该值在集合中的排名，从 0 开始。")])]),t._v(" "),s("p",[s("strong",[t._v("数据结构")])]),t._v(" "),s("p",[t._v("***SortedSet（zset）***是 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 提供的一个非常特别的数据结构，一方面它等价于 "),s("em",[s("strong",[t._v("Java")])]),t._v(" 的数据结构 ***Map<String, Double>***，可以给每一个元素 "),s("em",[s("strong",[t._v("value")])]),t._v(" 赋予一个权重 "),s("em",[s("strong",[t._v("score")])]),t._v("，另一方面它又类似于 "),s("em",[s("strong",[t._v("TreeSet")])]),t._v("，内部的元素会按照权重 "),s("em",[s("strong",[t._v("score")])]),t._v(" 进行排序，可以得到每个元素的名次，还可以通过 "),s("em",[s("strong",[t._v("score")])]),t._v(" 的范围来获取元素的列表。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("zset")])]),t._v(" 底层使用了两个数据结构")]),t._v(" "),s("ul",[s("li",[s("p",[s("em",[s("strong",[t._v("hash")])]),t._v("，"),s("em",[s("strong",[t._v("hash")])]),t._v(" 的作用就是关联元素 "),s("em",[s("strong",[t._v("value")])]),t._v(" 和权重 "),s("em",[s("strong",[t._v("score")])]),t._v("，保障元素 "),s("em",[s("strong",[t._v("value")])]),t._v(" 的唯一性，可以通过元素 "),s("em",[s("strong",[t._v("value")])]),t._v(" 找到相应的 "),s("em",[s("strong",[t._v("score")])]),t._v(" 值")])]),t._v(" "),s("li",[s("p",[t._v("跳跃表，跳跃表的目的在于给元素 "),s("em",[s("strong",[t._v("value")])]),t._v(" 排序，根据 "),s("em",[s("strong",[t._v("score")])]),t._v(" 的范围获取元素列表")])])]),t._v(" "),s("h1",{attrs:{id:"redis6新数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis6新数据结构"}},[t._v("#")]),t._v(" Redis6新数据结构")]),t._v(" "),s("h2",{attrs:{id:"bitmaps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bitmaps"}},[t._v("#")]),t._v(" Bitmaps")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("Redis提供了Bitmaps这个“数据类型”可以实现对位的操作：")]),t._v(" "),s("p",[t._v("（1）  Bitmaps"),s("strong",[t._v("本身不是一种数据类型")]),t._v("， 实际上它就是"),s("strong",[t._v("字符串")]),t._v("（key-value） ， 但是它可以"),s("strong",[t._v("对字符串的位进行操作")]),t._v("。")]),t._v(" "),s("p",[t._v("（2）  Bitmaps单独提供了一套命令， 所以在Redis中使用Bitmaps和使用字符串的方法不太相同。 可以把Bitmaps想象成一个以位为单位的数组， "),s("strong",[t._v("数组的每个单元只能存储0和1")]),t._v("， 数组的下标在Bitmaps中叫做偏移量。")]),t._v(" "),s("h3",{attrs:{id:"命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("h4",{attrs:{id:"setbit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setbit"}},[t._v("#")]),t._v(" setbit")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("setbit<key><offset><value>")]),t._v("设置Bitmaps中某个偏移量的值（0或1），offset:偏移量从0开始")]),t._v(" "),s("p",[t._v("实例：每个独立用户是否访问过网站存放在Bitmaps中， 将访问的用户记做1， 没有访问的用户记做0， 用偏移量作为用户的id。")]),t._v(" "),s("p",[t._v("设置键的第offset个位的值（从0算起） ， 假设现在有20个用户，userid=1， 6， 11， 15， 19的用户对网站进行了访问， 那么当前Bitmaps初始化结果如图")]),t._v(" "),s("p",[s("img",{attrs:{src:a(636),alt:"image-20220905145229840"}})]),t._v(" "),s("p",[t._v("注：")]),t._v(" "),s("p",[t._v("很多应用的用户id以一个指定数字（例如10000） 开头， 直接将用户id和Bitmaps的偏移量对应势必会造成一定的浪费， 通常的做法是每次做setbit操作时将用户id减去这个指定数字。")]),t._v(" "),s("p",[t._v("在第一次初始化Bitmaps时， 假如偏移量非常大， 那么整个初始化过程执行会比较慢， 可能会造成Redis的阻塞。")])]),t._v(" "),s("h4",{attrs:{id:"getbit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getbit"}},[t._v("#")]),t._v(" getbit")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("getbit<key><offset>")]),t._v("获取Bitmaps中某个偏移量的值，只能是0或1")])]),t._v(" "),s("h4",{attrs:{id:"bitcount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bitcount"}},[t._v("#")]),t._v(" bitcount")]),t._v(" "),s("p",[t._v("统计"),s("strong",[t._v("字符串")]),t._v("(即8位 0或1)中被设置为1的bit数。一般情况下，给定的整个字符串都会被进行计数，通过指定额外的start 或 end 参数，可以让计数只在特定的位上进行。start 和 end 参数的设置，都可以使用负数值：比如 -1 表示最后一个位，而 -2 表示倒数第二个位，start、end 是指"),s("strong",[t._v("bit组即8个bit")]),t._v("即**一个字节(bytes)**的下标数，并非bit偏移量二者皆包含。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("bitcount<key>[start end]")]),t._v(" 统计字符串从start字节到end字节比特值为1的bit数量")]),t._v(" "),s("p",[t._v("举例： K1 【01000001 01000000 00000000 00100001】，对应【0，1，2，3】")]),t._v(" "),s("p",[t._v("bitcount K1 1 2 ： 统计下标1、2字节组中bit=1的个数，即01000000 00000000")]),t._v(" "),s("p",[t._v("--》bitcount K1 1 2 　　--》1")]),t._v(" "),s("p",[t._v("bitcount K1 1 3 ： 统计下标1、2字节组中bit=1的个数，即01000000 00000000 00100001")]),t._v(" "),s("p",[t._v("--》bitcount K1 1 3　　--》3")]),t._v(" "),s("p",[t._v("注意：redis的setbit设置或清除的是bit位置，而bitcount计算的是byte位置。")])]),t._v(" "),s("h4",{attrs:{id:"bitop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bitop"}},[t._v("#")]),t._v(" bitop")]),t._v(" "),s("p",[t._v("bitop是一个复合操作， 它可以做多个Bitmaps的"),s("strong",[t._v("and（交集） 、 or（并集） 、 not（非） 、 xor（异或）")]),t._v(" 操作并将结果保存在"),s("strong",[t._v("destkey")]),t._v("中")]),t._v(" "),s("blockquote",[s("p",[t._v("bitop and(or/not/xor) "),s("destkey",[t._v(" [key1、key2…]")])],1),t._v(" "),s("p",[t._v("实例:")]),t._v(" "),s("p",[t._v("2020-11-04 日访问网站的userid=1,2,5,9。")]),t._v(" "),s("p",[t._v("2020-11-03 日访问网站的userid=0,1,4,9。")]),t._v(" "),s("p",[t._v("计算出两天都访问过网站的用户数量:bitop and(交集) unique:users:and:20201104_03(destkey)")]),t._v(" "),s("p",[t._v("unique:users:20201103(key1) unique:users:20201104(key2)")])]),t._v(" "),s("h3",{attrs:{id:"bitmaps与set对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bitmaps与set对比"}},[t._v("#")]),t._v(" Bitmaps与set对比")]),t._v(" "),s("p",[t._v("假设网站有1亿用户， 每天独立访问的用户有5千万， 如果每天用集合类型和Bitmaps分别存储活跃用户可以得到表")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("set和Bitmaps存储一天活跃用户对比")]),t._v(" "),s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数据类型")]),t._v(" "),s("td",[t._v("每个用户id占用空间")]),t._v(" "),s("td",[t._v("需要存储的用户量")]),t._v(" "),s("td",[t._v("全部内存量")])]),t._v(" "),s("tr",[s("td",[t._v("集合类型")]),t._v(" "),s("td",[t._v("64位")]),t._v(" "),s("td",[t._v("50000000")]),t._v(" "),s("td",[t._v("64位*50000000 = 400MB")])]),t._v(" "),s("tr",[s("td",[t._v("Bitmaps")]),t._v(" "),s("td",[t._v("1位")]),t._v(" "),s("td",[t._v("100000000")]),t._v(" "),s("td",[t._v("1位*100000000 = 12.5MB")])])])]),t._v(" "),s("p",[t._v("很明显， 这种情况下使用Bitmaps能节省很多的内存空间， 尤其是随着时间推移节省的内存还是非常可观的")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("set和Bitmaps存储独立用户空间对比")]),t._v(" "),s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数据类型")]),t._v(" "),s("td",[t._v("一天")]),t._v(" "),s("td",[t._v("一个月")]),t._v(" "),s("td",[t._v("一年")])]),t._v(" "),s("tr",[s("td",[t._v("集合类型")]),t._v(" "),s("td",[t._v("400MB")]),t._v(" "),s("td",[t._v("12GB")]),t._v(" "),s("td",[t._v("144GB")])]),t._v(" "),s("tr",[s("td",[t._v("Bitmaps")]),t._v(" "),s("td",[t._v("12.5MB")]),t._v(" "),s("td",[t._v("375MB")]),t._v(" "),s("td",[t._v("4.5GB")])])])]),t._v(" "),s("p",[t._v("但Bitmaps并不是万金油， 假如该网站每天的独立访问用户很少， 例如只有10万（大量的僵尸用户） ， 那么两者的对比如下表所示， 很显然， 这时候使用Bitmaps就不太合适了， 因为基本上大部分位都是0。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("set和Bitmaps存储一天活跃用户对比（独立用户比较少）")]),t._v(" "),s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数据类型")]),t._v(" "),s("td",[t._v("每个userid占用空间")]),t._v(" "),s("td",[t._v("需要存储的用户量")]),t._v(" "),s("td",[t._v("全部内存量")])]),t._v(" "),s("tr",[s("td",[t._v("集合类型")]),t._v(" "),s("td",[t._v("64位")]),t._v(" "),s("td",[t._v("100000")]),t._v(" "),s("td",[t._v("64位*100000 = 800KB")])]),t._v(" "),s("tr",[s("td",[t._v("Bitmaps")]),t._v(" "),s("td",[t._v("1位")]),t._v(" "),s("td",[t._v("100000000")]),t._v(" "),s("td",[t._v("1位*100000000 = 12.5MB")])])])]),t._v(" "),s("h2",{attrs:{id:"hyperloglog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[t._v("#")]),t._v(" HyperLogLog")]),t._v(" "),s("h3",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("前备知识：什么是基数?")]),t._v(" "),s("p",[t._v("比如数据集 {1, 3, 5, 7, 5, 7, 8}， 那么这个数据集的基数集为 {1, 3, 5 ,7, 8}, 基数(不重复元素)为5。 基数估计就是在误差可接受的范围内，快速计算基数。")]),t._v(" "),s("p",[t._v("在工作当中，我们经常会遇到与统计相关的功能需求，比如统计网站PV（PageView页面访问量）,可以使用Redis的incr、incrby轻松实现。")]),t._v(" "),s("p",[t._v("但像UV（UniqueVisitor，独立访客）、独立IP数、搜索记录数等需要去重和计数的问题如何解决？这种求集合中"),s("strong",[t._v("不重复元素个数")]),t._v("的问题称为"),s("strong",[t._v("基数问题")]),t._v("。")]),t._v(" "),s("p",[t._v("解决基数问题有很多种方案：")]),t._v(" "),s("p",[t._v("（1）数据存储在MySQL表中，使用distinct count计算不重复个数")]),t._v(" "),s("p",[t._v("（2）使用Redis提供的hash、set、bitmaps等数据结构来处理")]),t._v(" "),s("p",[s("strong",[t._v("以上的方案结果精确，但随着数据不断增加，导致占用空间越来越大，对于非常大的数据集是不切实际的。")])]),t._v(" "),s("p",[t._v("能否能够降低一定的精度来平衡存储空间？"),s("strong",[t._v("Redis推出了HyperLogLog")])]),t._v(" "),s("p",[t._v("Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定的、并且是很小的。")]),t._v(" "),s("p",[t._v("在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。")]),t._v(" "),s("p",[t._v("但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。")]),t._v(" "),s("p",[s("strong",[t._v("他这个和set区别是他不存元素，专门用于计算基数的，而且是通过数学概率统计的，有一定的误差但误差在允许范围类，因为不存储所以不怎么耗费内存，但是因为不存元素，你加了什么也取不出来")])]),t._v(" "),s("h3",{attrs:{id:"命令-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令-2"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("h4",{attrs:{id:"pfadd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pfadd"}},[t._v("#")]),t._v(" pfadd")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("pfadd <key>< element> [element ...]")]),t._v("  添加指定元素到 HyperLogLog 中")]),t._v(" "),s("p",[t._v("实例：将所有元素添加到指定HyperLogLog数据结构中。如果执行命令后HLL估计的近似基数发生变化，则返回1，否则返回0。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(637),alt:"image-20220905194244579"}})])]),t._v(" "),s("h4",{attrs:{id:"pfcount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pfcount"}},[t._v("#")]),t._v(" pfcount")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("pfcount<key> [key ...]")]),t._v(" 计算HLL的近似基数，可以计算多个HLL，比如用HLL存储每天的UV，计算一周的UV可以使用7天的UV合并计算即可")]),t._v(" "),s("p",[t._v("实例：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(638),alt:"image-20220905194457224"}})])]),t._v(" "),s("h4",{attrs:{id:"pfmerge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pfmerge"}},[t._v("#")]),t._v(" pfmerge")]),t._v(" "),s("blockquote",[s("p",[t._v("pfmerge"),s("destkey",[s("sourcekey",[t._v(" [sourcekey ...] 将一个或多个HLL合并后的结果存储在另一个HLL中，比如每月活跃用户可以使用每天的活跃用户来合并计算可得")])],1)],1),t._v(" "),s("p",[s("img",{attrs:{src:a(639),alt:"image-20220905194621140"}})])]),t._v(" "),s("h2",{attrs:{id:"geospatial"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geospatial"}},[t._v("#")]),t._v(" Geospatial")]),t._v(" "),s("h3",{attrs:{id:"简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("Redis 3.2 中增加了对GEO类型的支持。GEO，Geographic，地理信息的缩写。该类型，就是元素的2维坐标，在地图上就是经纬度。redis基于该类型，提供了经纬度设置，查询，范围查询，距离查询，经纬度Hash等常见操作。")]),t._v(" "),s("h3",{attrs:{id:"命令-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令-3"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("h4",{attrs:{id:"geoadd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geoadd"}},[t._v("#")]),t._v(" geoadd")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("geoadd<key>< longitude><latitude><member> [longitude latitude member...]")]),t._v("  添加地理位置（经度，纬度，名称）")]),t._v(" "),s("p",[t._v("实例:")]),t._v(" "),s("p",[s("code",[t._v("geoadd china:city 121.47 31.23 shanghai")])]),t._v(" "),s("p",[s("code",[t._v("geoadd china:city 106.50 29.53 chongqing 114.05 22.52 shenzhen 116.38 39.90 beijing")])])]),t._v(" "),s("p",[s("strong",[t._v("两极无法直接添加，一般会下载城市数据，直接通过 Java 程序一次性导入。")])]),t._v(" "),s("p",[s("strong",[t._v("有效的经度从 -180 度到 180 度。有效的纬度从 -85.05112878 度到 85.05112878 度。")])]),t._v(" "),s("p",[s("strong",[t._v("当坐标位置超出指定范围时，该命令将会返回一个错误。")])]),t._v(" "),s("p",[s("strong",[t._v("已经添加的数据，是无法再次往里面添加的。")])]),t._v(" "),s("h4",{attrs:{id:"geopos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geopos"}},[t._v("#")]),t._v(" geopos")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("geopos <key><member> [member...]")]),t._v(" 获得指定地区的坐标值")]),t._v(" "),s("p",[t._v("实例：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(640),alt:"image-20220905215704579"}})])]),t._v(" "),s("h4",{attrs:{id:"geodist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geodist"}},[t._v("#")]),t._v(" geodist")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("geodist<key><member1><member2> [m|km|ft|mi ]")]),t._v(" 获取两个位置之间的直线距离")]),t._v(" "),s("p",[t._v("实例:")]),t._v(" "),s("p",[s("img",{attrs:{src:a(641),alt:"image-20220905215802489"}})]),t._v(" "),s("p",[t._v("单位：\nm 表示单位为米[默认值]。\nkm 表示单位为千米。\nmi 表示单位为英里。\nft 表示单位为英尺。")]),t._v(" "),s("p",[t._v("如果用户没有显式地指定单位参数， 那么 GEODIST 默认使用米作为单位")])]),t._v(" "),s("h4",{attrs:{id:"georadius"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#georadius"}},[t._v("#")]),t._v(" georadius")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("georadius<key>< longitude><latitude>radius [m|km|ft|mi]")]),t._v("  以给定的经纬度为中心，找出某一半径内的元素  （经度 纬度 距离 单位）")]),t._v(" "),s("p",[t._v("实例：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(642),alt:"image-20220905215939313"}})])]),t._v(" "),s("h1",{attrs:{id:"redis的发布与订阅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis的发布与订阅"}},[t._v("#")]),t._v(" Redis的发布与订阅")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 发布订阅（ "),s("em",[s("strong",[t._v("pub/sub")])]),t._v(" ）是一种消息通信模式：发送者（ "),s("em",[s("strong",[t._v("pub")])]),t._v(" ）发送消息，订阅者（ "),s("em",[s("strong",[t._v("sub")])]),t._v(" ）接收消息。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 客户端可以订阅任意数量的频道。")]),t._v(" "),s("ol",[s("li",[t._v("客户端可以订阅频道")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(643),alt:""}}),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("当给这个频道发布消息后，消息就会发送给订阅的客户端")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(644)}}),t._v(" "),s("blockquote",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("subscribe channel # 订阅频道\n\npublish channel hello # 频道发送信息\n")])])])]),t._v(" "),s("h1",{attrs:{id:"事务和锁机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务和锁机制"}},[t._v("#")]),t._v(" 事务和锁机制")]),t._v(" "),s("p",[s("strong",[t._v("Redis 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。")])]),t._v(" "),s("p",[s("strong",[t._v("Redis 事务的主要作用就是串联多个命令防止别的命令插队。")])]),t._v(" "),s("h2",{attrs:{id:"命令-multi、exec、discard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令-multi、exec、discard"}},[t._v("#")]),t._v(" "),s("em",[t._v("命令：Multi")]),t._v("、"),s("em",[t._v("Exec")]),t._v("、"),s("em",[t._v("Discard")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(645),alt:"image-20220908143740781"}})]),t._v(" "),s("p",[s("em",[t._v("从输入Multi命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入Exec后，Redis会将之前的命令队列中的命令依次执行。")])]),t._v(" "),s("p",[s("strong",[t._v("组队的过程中可以通过discard来放弃组队。")])]),t._v(" "),s("p",[s("strong",[t._v("一旦执行，无法撤销，执行中某个命令出现了错误，这个指令将无法执行，但是这个命令前后的命令都正常执行生效")])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("Multi")])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Exec")])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Discard")])])]),t._v(" "),s("p",[t._v("从输入 "),s("em",[s("strong",[t._v("Multi")])]),t._v(" 命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入 "),s("em",[s("strong",[t._v("Exec")])]),t._v(" 后，"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 会将之前的命令队列中的命令依次执行。")]),t._v(" "),s("p",[t._v("组队的过程中可以通过 "),s("em",[s("strong",[t._v("Discard")])]),t._v(" 来放弃组队。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("组队成功，提交成功")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(646),alt:""}})]),t._v(" "),s("li",[s("p",[t._v("放弃组队")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(647),alt:""}})]),t._v(" "),s("li",[s("p",[t._v("组队中有命令错误，不会执行")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(648),alt:""}})]),t._v(" "),s("li",[s("p",[t._v("组队中不报错，执行时报错")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(649),alt:"截屏2021-10-27 18.31.15"}})])]),t._v(" "),s("p",[t._v("当组队中某个命令出现了报告错误，执行时整个的所有队列都会被取消。")]),t._v(" "),s("p",[t._v("当执行中某个命令出现了错误，这个指令将无法执行，但是这个命令前后的命令都正常执行生效")]),t._v(" "),s("h2",{attrs:{id:"悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁"}},[t._v("#")]),t._v(" 悲观锁")]),t._v(" "),s("p",[t._v("例子")]),t._v(" "),s("p",[t._v("一个请求想给金额减8000")]),t._v(" "),s("p",[t._v("一个请求想给金额减5000")]),t._v(" "),s("p",[t._v("一个请求想给金额减1000")]),t._v(" "),s("p",[s("img",{attrs:{src:a(650),alt:"image-20220908145412006"}})]),t._v(" "),s("p",[t._v("悲观锁（"),s("em",[s("strong",[t._v("Pessimistic Lock")])]),t._v("），即每次去拿数据的时候都认为有其他线程会修改，所以每次在拿数据的时候都会上锁，这样其他线程想要拿到这个数据就会被 "),s("em",[s("strong",[t._v("block")])]),t._v(" 直到成功拿到锁。（效率低）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(651),alt:"image-20220908145417338"}})]),t._v(" "),s("h2",{attrs:{id:"乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[t._v("#")]),t._v(" 乐观锁")]),t._v(" "),s("p",[t._v("乐观锁（"),s("em",[s("strong",[t._v("Optimistic Lock")])]),t._v("），即每次去拿数据的时候都认为其他线程不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间有没有其他线程去更新这个数据，可以使用版本号等机制。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(652),alt:"image-20220908145422202"}})]),t._v(" "),s("p",[s("strong",[t._v("乐观锁适用于多读的应用类型，这样可以提高吞吐量")]),t._v("。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 就是利用这种 "),s("em",[s("strong",[t._v("check-and-set（CAS）")])]),t._v(" 机制实现事务的。")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("p",[t._v("抢票过程中也是这个样子，实际情况下，抢票可以有多个人抢到票，但是付款只能有一个人。")]),t._v(" "),s("p",[t._v("当使用悲观锁时候，在抢票时判断，所以只能有一个人抢到票，所以只能一个人付款")]),t._v(" "),s("p",[t._v("当使用乐观锁时候，在抢票时不进行判断，可以有多个人抢到票，但是每个人付款的时候要进行数据版本判断，第一个人付款之后，版本更改，其他人便无法付款。")]),t._v(" "),s("h2",{attrs:{id:"乐观锁的使用-watch、unwatch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁的使用-watch、unwatch"}},[t._v("#")]),t._v(" "),s("em",[t._v("乐观锁的使用：Watch、unwatch")])]),t._v(" "),s("p",[t._v("watch：")]),t._v(" "),s("p",[t._v("在执行 "),s("em",[s("strong",[t._v("multi")])]),t._v(" 之前，先执行 ***watch key1 [key2]***，可以监视一个（或多个 ）"),s("em",[s("strong",[t._v("key")])]),t._v(" 。如果在事务执行之前这个 "),s("em",[s("strong",[t._v("key")])]),t._v(" 被其他命令所改动，那么事务将被打断，执行事务报nil错误。")]),t._v(" "),s("p",[t._v("nuwatch:")]),t._v(" "),s("p",[t._v("取消 "),s("em",[s("strong",[t._v("WATCH")])]),t._v(" 命令对所有 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的监视。")]),t._v(" "),s("p",[t._v("但如果在执行 "),s("em",[s("strong",[t._v("WATCH")])]),t._v(" 命令之后，"),s("em",[s("strong",[t._v("EXEC")])]),t._v(" 命令或 "),s("em",[s("strong",[t._v("DISCARD")])]),t._v(" 命令先被执行，那么就不需要再执行 "),s("em",[s("strong",[t._v("UNWATCH")])]),t._v(" 。")]),t._v(" "),s("h2",{attrs:{id:"redis事务三特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis事务三特性"}},[t._v("#")]),t._v(" Redis事务三特性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单独的隔离操作")]),t._v(" "),s("p",[t._v("事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。")])]),t._v(" "),s("li",[s("p",[t._v("没有隔离级别的概念")]),t._v(" "),s("p",[t._v("队列中的命令没有提交之前都不会实际被执行，因为事务提交前任何指令都不会被实际执行。")])]),t._v(" "),s("li",[s("p",[t._v("不保证原子性")]),t._v(" "),s("p",[t._v("事务中如果有一条命令执行失败，其后的命令仍然会被执行，没有回滚 。")])])]),t._v(" "),s("h1",{attrs:{id:"持久化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久化"}},[t._v("#")]),t._v(" 持久化")]),t._v(" "),s("p",[t._v("Redis 提供了2个不同形式的持久化方式。\n"),s("strong",[t._v("RDB（Redis DataBase）")]),t._v(" "),s("strong",[t._v("AOF（Append Of File）")])]),t._v(" "),s("h2",{attrs:{id:"rdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rdb"}},[t._v("#")]),t._v(" RDB")]),t._v(" "),s("p",[t._v("在指定的时间间隔内将内存中的数据集快照写入磁盘， 即 "),s("em",[s("strong",[t._v("Snapshot")])]),t._v(" 快照，恢复时是将快照文件直接读到内存里。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(653)}}),t._v(" "),s("h3",{attrs:{id:"备份是如何执行的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份是如何执行的"}},[t._v("#")]),t._v(" 备份是如何执行的")]),t._v(" "),s("p",[s("img",{attrs:{src:a(654),alt:"image-20220910065644155"}})]),t._v(" "),s("p",[t._v("相关解释："),s("a",{attrs:{href:"https://blog.csdn.net/yidan7063/article/details/107722544",target:"_blank",rel:"noopener noreferrer"}},[t._v("RDB执行流程"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 会单独创建一个子进程（"),s("em",[s("strong",[t._v("fork")])]),t._v("）来进行持久化。")]),t._v(" "),s("p",[t._v("先将数据写入到一个临时文件中，待（上一次）持久化过程完成后，再将这个临时文件内容覆盖到 "),s("em",[s("strong",[t._v("dump.rdb")])]),t._v("。")]),t._v(" "),s("p",[t._v("整个过程中，主进程是不进行任何 "),s("em",[s("strong",[t._v("IO")])]),t._v(" 操作的，这就确保了极高的性能。如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那 "),s("em",[s("strong",[t._v("RDB")])]),t._v(" 方式要比 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 方式更加的高效。")]),t._v(" "),s("p",[s("strong",[s("em",[t._v("RDB")]),t._v(" 的缺点是最后一次持久化后的数据可能丢失")]),t._v("：在最后一次save时间间隔内服务器挂掉，数据还没有达到快照条件，使数据丢失")]),t._v(" "),s("h3",{attrs:{id:"fork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fork"}},[t._v("#")]),t._v(" Fork")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作用是复制一个与当前进程一样的进程。新进程的所有数据（变量、环境变量、程序计数器等） 数值都和原进程一致，但是是一个全新的进程，并作为原进程的子进程")])]),t._v(" "),s("li",[s("p",[t._v("在 "),s("em",[s("strong",[t._v("Linux")])]),t._v(" 程序中，"),s("em",[s("strong",[t._v("fork()")])]),t._v(" 会产生一个和父进程完全相同的子进程，但子进程在此后多会 "),s("em",[s("strong",[t._v("exec")])]),t._v(" 系统调用，出于效率考虑，"),s("em",[s("strong",[t._v("Linux")])]),t._v(" 中引入了 "),s("strong",[t._v("写时复制技术")]),t._v("【【"),s("strong",[t._v("写时复制")]),t._v("（"),s("strong",[t._v("Copy-on-write")]),t._v("，简称"),s("strong",[t._v("COW")]),t._v("）是一种计算机"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("程序设计"),s("OutboundLink")],1),t._v("领域的优化策略。其核心思想是，如果有多个调用者（callers）同时请求相同资源（如内存或磁盘上的"),s("a",{attrs:{href:"https://cloud.tencent.com/product/cdcs?from=10680",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据存储"),s("OutboundLink")],1),t._v("），他们会共同获取相同的指针指向相同的资源，直到某个调用者试图修改资源的内容时，系统才会真正复制一份专用副本（private copy）给该调用者，而其他调用者所见到的最初的资源仍然保持不变。这过程对其他的调用者都是"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%80%8F%E6%98%8E",target:"_blank",rel:"noopener noreferrer"}},[t._v("透明"),s("OutboundLink")],1),t._v("的。此作法主要的优点是如果调用者没有修改该资源，就不会有副本（private copy）被创建，因此多个调用者只是读取操作时可以共享同一份资源。】】")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("一般情况父进程和子进程会共用同一段物理内存")]),t._v("，当进程空间的各段的内容要发生变化时，会把父进程的内容复制一份给子进程")])])]),t._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("blockquote",[s("p",[t._v("以下配置所在位置redis.conf里的SNAPSHOTTING下")]),t._v(" "),s("p",[s("strong",[s("em",[t._v("dump")]),t._v(" 文件名字")])]),t._v(" "),s("p",[t._v("快照的文件名称，默认为 "),s("em",[s("strong",[t._v("dump.rdb")])]),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(655)}}),t._v(" "),s("p",[s("strong",[s("em",[t._v("dump")]),t._v(" 保存位置")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("rdb")])]),t._v(" 文件的保存路径可以修改。默认为 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 启动命令程序所在的目录下。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(656)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("stop-writes-on-bgsave-error")])])]),t._v(" "),s("p",[t._v("即当 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 无法写入磁盘，关闭 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 的写入操作。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(657)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("rdbcompression")]),t._v("压缩文件")]),t._v("****")]),t._v(" "),s("p",[t._v("对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用LZF算法进行压缩。")]),t._v(" "),s("p",[t._v("如果你不想消耗CPU来进行压缩的话，可以设置为关闭此功能。推荐yes.")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(658)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("rdbchecksum检查完整性")])])]),t._v(" "),s("p",[t._v("在存储快照后，还可以让redis使用CRC64算法来进行数据校验，")]),t._v(" "),s("p",[t._v("但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能")]),t._v(" "),s("p",[t._v("但推荐yes.")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(659)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("save")])])]),t._v(" "),s("p",[t._v("表示写操作的触发条件。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("格式：save 秒 写操作次数\n")])])]),s("p",[t._v("RDB是整个内存的压缩过的Snapshot，RDB的数据结构，可以配置复合的快照触发条件，")]),t._v(" "),s("p",[t._v("默认是1分钟内改了1万次，或5分钟内改了10次，或15分钟内改了1次。这个设置默认被注释掉了")]),t._v(" "),s("p",[t._v("禁用：不设置save指令，或者给save传入空字符串")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(660)}})]),t._v(" "),s("h3",{attrs:{id:"命令save-vs-bgsave"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令save-vs-bgsave"}},[t._v("#")]),t._v(" 命令save VS bgsave")]),t._v(" "),s("blockquote",[s("p",[t._v("save ：save时只管保存，其它不管，全部阻塞。手动保存。不建议。\nbgsave：Redis会在后台异步进行快照操作， 快照同时还可以响应客户端请求。\n可以通过lastsave 命令获取最后一次成功执行快照的时间")])]),t._v(" "),s("h3",{attrs:{id:"rdb的备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rdb的备份"}},[t._v("#")]),t._v(" rdb的备份")]),t._v(" "),s("p",[s("strong",[t._v("就是复制rdb文件，等到需要恢复的时候让redis自动加载这个副本")]),t._v("，可以用shell编程写个脚本，定时备份该文件")]),t._v(" "),s("p",[t._v("先通过config get dir  查询rdb文件的目录\n将*.rdb的文件拷贝到别的地方\nrdb的恢复")]),t._v(" "),s("ul",[s("li",[t._v("关闭Redis")]),t._v(" "),s("li",[t._v("先把备份的文件拷贝到工作目录下 cp dump2.rdb dump.rdb")]),t._v(" "),s("li",[t._v("启动Redis, 备份数据会直接加载")])]),t._v(" "),s("h3",{attrs:{id:"如何停止rdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何停止rdb"}},[t._v("#")]),t._v(" 如何停止RDB")]),t._v(" "),s("p",[t._v("动态停止RDB："),s("code",[t._v('redis-cli config set save ""')])]),t._v(" "),s("p",[t._v("#save后给空值，表示禁用保存策略")]),t._v(" "),s("h3",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("适合大规模的数据恢复；")]),t._v(" "),s("li",[t._v("对数据完整性和一致性要求不高更适合使用；")]),t._v(" "),s("li",[t._v("节省磁盘空间；")]),t._v(" "),s("li",[t._v("恢复速度快。")])]),t._v(" "),s("h3",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[s("em",[s("strong",[t._v("Fork")])]),t._v(" 的时候，内存中的数据被克隆了一份，大致 2 倍的膨胀性需要考虑；")]),t._v(" "),s("li",[t._v("虽然 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 在 "),s("em",[s("strong",[t._v("fork")])]),t._v(" 时使用了"),s("strong",[t._v("写时拷贝技术")]),t._v("，但是如果数据庞大时还是比较消耗性能；")]),t._v(" "),s("li",[t._v("在备份周期在一定间隔时间做一次备份，所以如果 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 意外 "),s("em",[s("strong",[t._v("down")])]),t._v(" 掉的话，就会丢失最后一次快照后的所有修改。")])]),t._v(" "),s("h2",{attrs:{id:"aof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aof"}},[t._v("#")]),t._v(" AOF")]),t._v(" "),s("p",[t._v("以"),s("strong",[t._v("日志的形式来记录每个写操作（增量保存）")]),t._v("，将 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 执行过的所有写指令记录下来（"),s("strong",[t._v("读操作不记录")]),t._v("）， "),s("u",[t._v("只许追加文件但不可以改写文件")]),t._v("，"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 启动之初会读取该文件重新构建数据，换言之，如果 *"),s("strong",[t._v("Redis重启就会根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("执行流程")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("客户端的请求写命令会被 "),s("em",[s("strong",[t._v("append")])]),t._v(" 追加到 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 缓冲区内；")])]),t._v(" "),s("li",[s("p",[s("em",[s("strong",[t._v("AOF")])]),t._v(" 缓冲区根据 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 持久化策略 "),s("code",[t._v("[always,everysec,no]")]),t._v(" 将操作 "),s("em",[s("strong",[t._v("sync")])]),t._v(" 同步到磁盘的 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件中；")])]),t._v(" "),s("li",[s("p",[s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件大小超过重写策略或手动重写时，会对 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件 "),s("em",[s("strong",[t._v("Rewrite")])]),t._v(" 重写，压缩 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件容量；")])]),t._v(" "),s("li",[s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 服务重启时，会重新 "),s("em",[s("strong",[t._v("load")])]),t._v(" 加载 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件中的写操作达到数据恢复的目的。")])])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("AOF")])]),t._v(" 和 "),s("em",[s("strong",[t._v("RDB")])]),t._v(" 同时开启时，系统默认加载 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 的数据，RDB中的数据不会被加载（数据不会存在丢失）")])]),t._v(" "),s("h3",{attrs:{id:"配置-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-2"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("blockquote",[s("p",[s("strong",[s("em",[t._v("AOF")]),t._v(" 默认不开启")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(661)}}),t._v(" "),s("p",[s("strong",[t._v("文件名字")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(662)}}),t._v(" "),s("p",[s("strong",[s("em",[t._v("AOF")]),t._v(" 同步频率设置")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(663)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("appendfsync always")])])]),t._v(" "),s("p",[t._v("​\t始终同步，每次 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 的写入都会立刻记入日志；")]),t._v(" "),s("p",[t._v("​\t性能较差但数据完整性比较好。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("appendfsync everysec")])])]),t._v(" "),s("p",[t._v("​\t每秒同步，每秒记入日志一次，如果宕机，本秒的数据可能丢失。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("appendfsync no")])])]),t._v(" "),s("p",[t._v("​\t"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 不主动进行同步，把同步时机交给操作系统。")]),t._v(" "),s("p",[s("strong",[s("em",[t._v("Rewrite")]),t._v(" 压缩")])]),t._v(" "),s("p",[t._v("当 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件的大小超过所设定的阈值时，"),s("em",[s("strong",[t._v("Redis")])]),t._v(" 就会启动 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 文件的内容压缩，只保留可以恢复数据的最小指令集。可以使用命令 "),s("em",[s("strong",[t._v("bgrewriteaof")])]),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(664)}})]),t._v(" "),s("h3",{attrs:{id:"备份方法和rdb一样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份方法和rdb一样"}},[t._v("#")]),t._v(" 备份方法和RDB一样")]),t._v(" "),s("h3",{attrs:{id:"aof恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aof恢复"}},[t._v("#")]),t._v(" AOF恢复")]),t._v(" "),s("p",[t._v("正常恢复")]),t._v(" "),s("ul",[s("li",[t._v("修改默认的appendonly no，改为yes")]),t._v(" "),s("li",[t._v("将有数据的aof文件复制一份保存到对应目录(查看目录：config get dir)")]),t._v(" "),s("li",[t._v("恢复：重启redis然后重新加载")])]),t._v(" "),s("p",[t._v("异常恢复")]),t._v(" "),s("ul",[s("li",[t._v("修改默认的appendonly no，改为yes")]),t._v(" "),s("li",[t._v("如遇到"),s("strong",[t._v("AOF")]),t._v("文件损坏**，通过/usr/local/bin/**redis-check-aof--fix appendonly.aof进行恢复")]),t._v(" "),s("li",[t._v("备份被写坏的AOF文件")]),t._v(" "),s("li",[t._v("恢复：重启redis，然后重新加载")])]),t._v(" "),s("h3",{attrs:{id:"aof同步频率设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aof同步频率设置"}},[t._v("#")]),t._v(" AOF同步频率设置")]),t._v(" "),s("p",[s("code",[t._v("appendfsync always")])]),t._v(" "),s("p",[t._v("始终同步，每次Redis的写入都会立刻记入日志；性能较差但数据完整性比较好")]),t._v(" "),s("p",[s("code",[t._v("appendfsync everysec")])]),t._v(" "),s("p",[t._v("每秒同步，每秒记入日志一次，如果宕机，本秒的数据可能丢失。")]),t._v(" "),s("p",[s("code",[t._v("appendfsync no")])]),t._v(" "),s("p",[t._v("redis不主动进行同步，把同步时机交给操作系统。")]),t._v(" "),s("h3",{attrs:{id:"aof重写-rewrite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aof重写-rewrite"}},[t._v("#")]),t._v(" AOF重写/Rewrite")]),t._v(" "),s("ol",[s("li",[t._v("是什么：")])]),t._v(" "),s("blockquote",[s("p",[t._v("AOF采用文件追加方式，文件会越来越大为避免出现此种情况，新增了重写机制, 当AOF文件的大小超过所设定的阈值时，Redis就会启动AOF文件的内容压缩， 只保留可以恢复数据的最小指令集.可以使用命令bgrewriteaof")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("重写原理，如何实现重写")])]),t._v(" "),s("blockquote",[s("p",[t._v("AOF文件"),s("strong",[t._v("持续增长而过大时，会fork出一条新进程来将文件重写")]),t._v("(也是先写临时文件最后再rename)，redis4.0版本后的重写，实际上就是"),s("strong",[t._v("把rdb 的快照，以二级制的形式附在新的aof头部，作为已有的历史数据，替换掉原来的流水账操作。")])]),t._v(" "),s("p",[t._v("no-appendfsync-on-rewrite设置：")]),t._v(" "),s("p",[t._v("如果 no-appendfsync-on-rewrite=yes ,设置重写时暂停AOF持久化，不写入aof文件而写入RDB缓存，用户请求不会阻塞，但是在这段时间如果宕机会丢失这段时间的缓存数据。（降低数据安全性，提高性能）")]),t._v(" "),s("p",[t._v("如果 no-appendfsync-on-rewrite=no, 还是会把数据往磁盘里刷，但是遇到重写操作，可能会发生阻塞。（数据安全，但是性能降低）")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("触发机制，何时重写")])]),t._v(" "),s("blockquote",[s("p",[t._v("Redis会记录上次重写时的AOF大小，"),s("strong",[t._v("默认配置是当AOF文件大小是上次rewrite后大小的一倍且文件大于64M时触发")])]),t._v(" "),s("p",[t._v("重写虽然可以节约大量磁盘空间，减少恢复时间。但是每次重写还是有一定的负担的，因此设定Redis要满足一定条件才会进行重写。")]),t._v(" "),s("p",[t._v("auto-aof-rewrite-percentage：设置重写的基准值，文件达到100%时开始重写（文件是原来重写后文件的2倍时触发）")]),t._v(" "),s("p",[t._v("auto-aof-rewrite-min-size：设置重写的基准值，最小文件64MB。达到这个值开始重写。")]),t._v(" "),s("p",[t._v("例如：文件达到70MB开始重写，降到50MB，下次什么时候开始重写？100MB")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("重写流程")])]),t._v(" "),s("blockquote",[s("p",[t._v("（1）bgrewriteaof触发重写，判断是否当前有bgsave或bgrewriteaof在运行，如果有，则等待该命令结束后再继续执行。")]),t._v(" "),s("p",[t._v("（2）主进程fork出子进程执行重写操作，保证主进程不会阻塞。")]),t._v(" "),s("p",[t._v("（3）子进程遍历redis内存中数据到临时文件，客户端的写请求同时写入aof_buf缓冲区和aof_rewrite_buf重写缓冲区保证原AOF文件完整以及新AOF文件生成期间的新的数据修改动作不会丢失。")]),t._v(" "),s("p",[t._v("（4）子进程写完新的AOF文件后，向主进程发信号，父进程更新统计信息。2).主进程把aof_rewrite_buf中的数据写入到新的AOF文件。")]),t._v(" "),s("p",[t._v("（5）使用新的AOF文件覆盖旧的AOF文件，完成AOF重写。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(665),alt:"image-20220910123527428"}})])]),t._v(" "),s("h3",{attrs:{id:"优点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("备份机制更稳健，丢失数据概率更低；")]),t._v(" "),s("li",[t._v("可读的日志文本，通过操作 "),s("em",[s("strong",[t._v("AOF")])]),t._v(" 稳健，可以处理误操作。")])]),t._v(" "),s("h3",{attrs:{id:"缺点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("比起 "),s("em",[s("strong",[t._v("RDB")])]),t._v(" 占用更多的磁盘空间；")]),t._v(" "),s("li",[t._v("恢复备份速度要慢；")]),t._v(" "),s("li",[t._v("每次读写都同步的话，有一定的性能压力；")]),t._v(" "),s("li",[t._v("存在个别 "),s("em",[s("strong",[t._v("Bug")])]),t._v("，造成不能恢复。")])]),t._v(" "),s("h2",{attrs:{id:"选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[t._v("#")]),t._v(" 选择")]),t._v(" "),s("blockquote",[s("p",[t._v("官方推荐两个都启用。")]),t._v(" "),s("p",[t._v("如果对数据不敏感，可以选单独用 "),s("em",[s("strong",[t._v("RDB")])]),t._v("。")]),t._v(" "),s("p",[t._v("不建议单独用 "),s("em",[s("strong",[t._v("AOF")])]),t._v("，因为可能会出现 "),s("em",[s("strong",[t._v("Bug")])]),t._v("。")]),t._v(" "),s("p",[t._v("如果只是做纯内存缓存，可以都不用。")])]),t._v(" "),s("p",[s("strong",[t._v("官网建议翻译")])]),t._v(" "),s("blockquote",[s("p",[t._v("RDB持久化方式能够在指定的时间间隔能对你的数据进行快照存储")]),t._v(" "),s("p",[t._v("AOF持久化方式记录每次对服务器写的操作,当服务器重启的时候会重新执行这些命令来恢复原始的数据,AOF命令以redis协议追加保存每次写的操作到文件末尾.")]),t._v(" "),s("p",[t._v("Redis还能对AOF文件进行后台重写,使得AOF文件的体积不至于过大")]),t._v(" "),s("p",[s("strong",[t._v("只做缓存的情况")])]),t._v(" "),s("p",[t._v("如果你只希望你的数据在服务器运行的时候存在,你也可以不使用任何持久化方式.")]),t._v(" "),s("p",[s("strong",[t._v("同时开启两种持久化方式")])]),t._v(" "),s("p",[t._v("在这种情况下,当redis重启的时候会优先载入AOF文件来恢复原始的数据, 因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整.")]),t._v(" "),s("p",[t._v("RDB的数据不实时，同时使用两者时服务器重启也只会找AOF文件。那要不要只使用AOF呢？")]),t._v(" "),s("p",[t._v("建议不要，因为RDB更适合用于备份数据库(AOF在不断变化不好备份)， 快速重启，而且不会有AOF可能潜在的bug，留着作为一个万一的手段。")]),t._v(" "),s("p",[s("strong",[t._v("性能建议")])]),t._v(" "),s("p",[t._v("因为RDB文件只用作后备用途，建议只在Slave上持久化RDB文件，而且只要15分钟备份一次就够了，只保留save 900 1这条规则。")]),t._v(" "),s("p",[t._v("如果使用AOF，好处是在最恶劣情况下也只会丢失不超过两秒数据，启动脚本较简单只load自己的AOF文件就可以了。  代价,一是带来了持续的IO，二是AOF rewrite的最后将rewrite过程中产生的新数据写到新文件造成的阻塞几乎是不可避免的。  "),s("strong",[t._v("只要硬盘许可，应该尽量减少AOF rewrite的频率，AOF重写的基础大小默认值64M太小了，可以设到5G以上。  默认超过原大小100%大小时重写可以改到适当的数值。")])])]),t._v(" "),s("h1",{attrs:{id:"主从复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主从复制"}},[t._v("#")]),t._v(" 主从复制")]),t._v(" "),s("p",[t._v("主机数据更新后根据配置和策略， 自动同步到备机的 "),s("em",[s("strong",[t._v("master/slaver")])]),t._v(" 机制，"),s("em",[s("strong",[t._v("Master")])]),t._v(" 以写为主，"),s("em",[s("strong",[t._v("Slaver")])]),t._v(" 以读为主。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(666)}}),t._v(" "),s("ol",[s("li",[t._v("读写分离，性能扩展")]),t._v(" "),s("li",[t._v("容灾快速恢复")]),t._v(" "),s("li",[t._v("一主多从！")])]),t._v(" "),s("p",[t._v("注意：可以对主机进行读和写，但是对从机只能读，否则报错")]),t._v(" "),s("h2",{attrs:{id:"搭建一主两从"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建一主两从"}},[t._v("#")]),t._v(" 搭建一主两从")]),t._v(" "),s("ol",[s("li",[t._v("创建文件目录")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/myredis\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("将 "),s("em",[s("strong",[t._v("redis.conf")])]),t._v(" 复制到当前目录")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cp /etc/redis.conf /myredis\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("要把 redis.conf 中的AOF关闭")]),t._v(" "),s("li",[t._v("创建 3 个 "),s("em",[s("strong",[t._v("redis.conf")])]),t._v(" 配置文件")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("redis6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//主机配置文件")]),t._v("\nredis6380"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从机")]),t._v("\nredis6381"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从机")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("# redis6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\ninclude "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("myredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入redis.conf中的基础配置")]),t._v("\npidfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redis_6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每台机子都有一个唯一的pidfile，设置文件目录")]),t._v("\nport "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置端口号")]),t._v("\ndbfilename dump6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rdb "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置rdb文件的目录及文件名称")]),t._v("\n\n# redis6380"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\ninclude "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("myredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\npidfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redis_6380"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid\nport "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6380")]),t._v("\ndbfilename dump6380"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rdb\n\n# redis6381"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\ninclude "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("myredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\npidfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redis_6381"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid\nport "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6381")]),t._v("\ndbfilename dump6381"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rdb\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("启动 3 台 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 服务器")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(667),alt:""}}),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("查看主机运行情况的命令")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("info replication\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(668)}}),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("配从不配主("),s("strong",[t._v("当从服务器关闭后，再次开启时默认自己是主服务器，需要重新设置")]),t._v(")")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("slaveof  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ip"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 成为某个实例的从服务器")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(669)}}),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(670),alt:"截屏2021-10-30 15.03.40"}}),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[t._v("再次查看主机运行情况")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(671)}}),t._v(" "),s("p",[t._v("成功搭建。")]),t._v(" "),s("h2",{attrs:{id:"一主二仆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一主二仆"}},[t._v("#")]),t._v(" 一主二仆")]),t._v(" "),s("blockquote",[s("p",[t._v("主机 "),s("em",[s("strong",[t._v("6379")])]),t._v("，从机 "),s("em",[s("strong",[t._v("6380")])]),t._v(" 和 "),s("em",[s("strong",[t._v("6381")])]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("假设 从机 "),s("em",[s("strong",[t._v("6380")])]),t._v(" 挂掉。")])]),t._v(" "),s("p",[s("strong",[t._v("当6380重启后，6380不再是6379的从机，而是作为新的master；")]),t._v(" "),s("strong",[t._v("当再次把6380作为6379的从机加入后，从机 会把数据从头到尾复制。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("假设 主机 "),s("em",[s("strong",[t._v("6379")])]),t._v(" 挂掉。")])]),t._v(" "),s("p",[s("strong",[t._v("6380和6381仍然是6379的从机，不会做任何事；")]),t._v(" "),s("strong",[t._v("当6379重启后，依然是主服务器。")])])]),t._v(" "),s("h2",{attrs:{id:"薪火相传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#薪火相传"}},[t._v("#")]),t._v(" 薪火相传")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(672)}}),t._v(" "),s("p",[t._v("上一个 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 可以是下一个 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 的 "),s("em",[s("strong",[t._v("master")])]),t._v("，"),s("em",[s("strong",[t._v("slave")])]),t._v(" 同样可以接收其他 ***slave***的连接和同步请求，那么该 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 作为了链条中下一个的 "),s("em",[s("strong",[t._v("master")])]),t._v("，"),s("strong",[t._v("可以有效减轻 master 给从服务器同步数据的压力，去中心化降低风险")]),t._v("。但是具有master身份的slave依旧没有写权限，大哥只能有一个")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("slaveof <ip><port>\n")])])]),s("p",[t._v("中途变更转向：会清除之前的数据，重新建立拷贝最新的。")]),t._v(" "),s("p",[s("strong",[t._v("当某个 "),s("em",[t._v("slave")]),t._v(" 宕机，后面的 "),s("em",[t._v("slave")]),t._v(" 都没法备份。")])]),t._v(" "),s("p",[t._v("即当主机挂掉，从机还是从机，无法执行写命令。")]),t._v(" "),s("h2",{attrs:{id:"反客为主"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反客为主"}},[t._v("#")]),t._v(" 反客为主")]),t._v(" "),s("p",[t._v("当一个 "),s("em",[s("strong",[t._v("master")])]),t._v(" 宕机后，后面的 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 可以立刻升为 "),s("em",[s("strong",[t._v("master")])]),t._v("，其后面的 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 不用做任何修改。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("slaveof no one  将 从服务器 设置为 主服务器\n")])])]),s("p",[t._v("但是这个只是手动操作，想要自动化，需要使用下面讲的哨兵模式")]),t._v(" "),s("h2",{attrs:{id:"哨兵模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哨兵模式"}},[t._v("#")]),t._v(" 哨兵模式")]),t._v(" "),s("p",[s("strong",[t._v("反客为主的自动版")]),t._v("，即能够"),s("strong",[t._v("后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库")]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("创建 "),s("em",[s("strong",[t._v("sentinel.conf")])]),t._v(" 文件")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/myredis/sentinel.conf\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("配置哨兵服务器")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("sentinel monitor mymaster "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".88.168 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mymaster：给需要监控的对象起的名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1：至少要有多少个哨兵同意需要迁移 ")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("启动哨兵服务器")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("redis-sentinel  /opt/etc/sentinel.conf \n\n新版本使用replicaof  host  port  ？？？\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(673),alt:""}}),t._v(" "),s("p",[t._v("主机挂掉，会从机选举中产生新的主机。选举的规则。")]),t._v(" "),s("h3",{attrs:{id:"选举规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选举规则"}},[t._v("#")]),t._v(" 选举规则")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一层级：根据优先级别，redis.conf文件中的配置：***slave-priority/replica-priority（新版本）***，根据数字大小，越小的优先越高。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(674),alt:""}})]),t._v(" "),s("li",[s("p",[t._v("第二层级：当第一层级相同时，根据偏移量（即根据谁与主机的文件同步度最高），优先选择偏移量大的。")])]),t._v(" "),s("li",[s("p",[t._v("第三层级:当第二层级相同时，根据 "),s("em",[s("strong",[t._v("runid")])]),t._v("（runid：每个redis实例启动后都会随机生成一个40位的runid），优先选择最小的服务。")])])]),t._v(" "),s("h3",{attrs:{id:"复制延时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制延时"}},[t._v("#")]),t._v(" 复制延时")]),t._v(" "),s("p",[t._v("由于所有的写操作都是先在 "),s("em",[s("strong",[t._v("master")])]),t._v(" 上操作，然后同步更新到 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 上，所以从 "),s("em",[s("strong",[t._v("master")])]),t._v(" 同步到 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 从机有一定的延迟，当系统很繁忙的时候，延迟问题会更加严重，"),s("em",[s("strong",[t._v("slave")])]),t._v(" 机器数量的增加也会使这个问题更加严重。")]),t._v(" "),s("h2",{attrs:{id:"主从复制原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主从复制原理"}},[t._v("#")]),t._v(" 主从复制原理")]),t._v(" "),s("ul",[s("li",[s("p",[s("em",[s("strong",[t._v("slave")])]),t._v(" 启动成功连接到 "),s("em",[s("strong",[t._v("master")])]),t._v(" 后会发送一个 "),s("em",[s("strong",[t._v("sync")])]),t._v(" 命令（同步命令）。")])]),t._v(" "),s("li",[s("p",[s("em",[s("strong",[t._v("master")])]),t._v(" 接到命令启动后台的存盘进程，对数据进行持久化操作，同时收集所有接收到的用于修改数据集命令，在后台进程执行完毕之后，"),s("em",[s("strong",[t._v("master")])]),t._v(" 将传送整个数据文件（"),s("em",[s("strong",[t._v("rdb")])]),t._v("）到 "),s("em",[s("strong",[t._v("slave")])]),t._v("，以完成一次完全同步。")])]),t._v(" "),s("li",[s("p",[t._v("当主服务进行写操作后，也会和 从服务器进行数据同步。")])]),t._v(" "),s("li",[s("p",[t._v("全量复制：而 "),s("em",[s("strong",[t._v("slave")])]),t._v(" 服务在接收到数据库文件数据后，将其存盘并加载到内存中。")])]),t._v(" "),s("li",[s("p",[t._v("增量复制："),s("em",[s("strong",[t._v("master")])]),t._v(" 继续将新的所有收集到的修改命令依次传给 "),s("em",[s("strong",[t._v("slave")])]),t._v("，完成同步。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("只要是重新连接 master，一次完全同步（全量复制）将被自动执行。")])])])]),t._v(" "),s("h2",{attrs:{id:"主从复制代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主从复制代码"}},[t._v("#")]),t._v(" 主从复制代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisSentinelPool")]),t._v(" jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jedis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getJedisFromSentinel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" sentinelSet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            sentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.11.103:26379"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisPoolConfig")]),t._v(" jedisPoolConfig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisPoolConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxTotal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最大可用连接数")]),t._v("\n\t\t\tjedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxIdle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最大闲置连接数")]),t._v("\n            jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMinIdle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最小闲置连接数")]),t._v("\n            jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBlockWhenExhausted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连接耗尽是否等待")]),t._v("\n            jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxWaitMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等待时间")]),t._v("\n            jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTestOnBorrow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取连接的时候进行一下测试 ping pong")]),t._v("\n\n\t\t\tjedisSentinelPool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisSentinelPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mymaster"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h1",{attrs:{id:"集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[t._v("#")]),t._v(" 集群")]),t._v(" "),s("p",[t._v("容量不够，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 如何进行扩容？")]),t._v(" "),s("p",[t._v("并发写操作， "),s("em",[s("strong",[t._v("redis")])]),t._v(" 如何分摊？")]),t._v(" "),s("p",[t._v("主从模式，薪火相传模式，主机宕机，导致 "),s("em",[s("strong",[t._v("ip")])]),t._v(" 地址发生变化，应用程序中配置需要修改对应的主机地址、端口等信息。")]),t._v(" "),s("p",[t._v("解决方法：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("代理主机（ "),s("em",[s("strong",[t._v("之前")])]),t._v(" ）")]),t._v(" "),s("p",[t._v("![](./RedisNote.assets/截屏2021-10-30 17.19.15.png)")])]),t._v(" "),s("li",[s("p",[t._v("无中心化集群配置（ "),s("em",[s("strong",[t._v("redis3.0")])]),t._v(" ）")])])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(675)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 集群实现了对 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 的水平扩容，即启动 "),s("em",[s("strong",[t._v("N")])]),t._v(" 个 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 节点，将整个数据库分布存储在这 "),s("em",[s("strong",[t._v("N")])]),t._v(" 个节点中，每个节点存储总数据的 "),s("em",[s("strong",[t._v("1/N")])]),t._v(" 。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 集群通过分区（"),s("em",[s("strong",[t._v("partition")])]),t._v("）来提供一定程度的可用性（"),s("em",[s("strong",[t._v("availability")])]),t._v("），即使集群中有一部分节点失效或者无法进行通讯， 集群也可以继续处理命令请求。")]),t._v(" "),s("h2",{attrs:{id:"搭建-redis-集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建-redis-集群"}},[t._v("#")]),t._v(" 搭建 "),s("em",[t._v("Redis")]),t._v(" 集群")]),t._v(" "),s("ol",[s("li",[t._v("创建配置文件")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以redis6379.conf为例")]),t._v("\ninclude /opt/etc/redis.conf\npidfile /var/run/redis_6379.pid "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更改")]),t._v("\nport "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更改")]),t._v("\ndbfilename dump6379.rdb "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更改")]),t._v("\ncluster-enabled "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打开集群模式")]),t._v("\ncluster-config-file nodes-6379.conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置节点配置文件名称，需要更改")]),t._v("\ncluster-node-timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置节点失联事件，超过该时间（ms），集群自动进行主从切换")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(676)}}),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("启动")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(677),alt:""}}),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("将 6 个节点合成一个集群")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 组合之前请确保所有redis实例启动后，nodes-xxxx.conf文件都生成正常。")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(678)}}),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入redis安装目录")]),t._v("\n/opt/redis-6.2.6/src\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行")]),t._v("\nredis-cli "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cluster")]),t._v(" create --cluster-replicas "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".137.128:6379 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".137.128:6380 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".137.128:6381 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".137.128:6389 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".137.128:6390 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".137.128:6391\n\n\n此处不要用127.0.0.1， 请用真实IP地址\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--replicas")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 表示采用最简单的方式配置集群，一台主机，一台从机，正好三组\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(679)}}),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("采用集群方式连接客户端,用任何一个节点都可以连接这个集群")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("redis-cli "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" PORT  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 多了一个-c")]),t._v("\ncluster nodes "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令查看集群信息，可以查看对应的主机或者从机，查看slots")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(680)}}),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("h3",{attrs:{id:"redis-cluster-如何分配这六个节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster-如何分配这六个节点"}},[t._v("#")]),t._v(" "),s("em",[t._v("redis cluster")]),t._v(" 如何分配这六个节点?")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("一个集群至少要有三个主节点")]),t._v("。")]),t._v(" "),s("p",[t._v("选项 "),s("code",[t._v("--cluster-replicas 1")]),t._v("，表示"),s("strong",[t._v("希望为集群中的每个主节点创建一个从节点")]),t._v("。")]),t._v(" "),s("p",[t._v("分配原则尽量保证每个主数据库运行在不同的 "),s("em",[s("strong",[t._v("IP")])]),t._v(" 地址，每个从库和主库不在一个 "),s("em",[s("strong",[t._v("IP")])]),t._v(" 地址上。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/tsuiraku/typora/raw/master/img/%E6%88%AA%E5%B1%8F2021-10-31%2014.30.26.png"}})]),t._v(" "),s("h3",{attrs:{id:"什么是-slots"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-slots"}},[t._v("#")]),t._v(" 什么是 "),s("em",[t._v("slots")]),t._v("？")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(681),alt:""}}),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(682)}}),t._v(" "),s("blockquote",[s("p",[t._v("一个 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 集群包含 "),s("em",[s("strong",[t._v("16384")])]),t._v(" 个插槽（"),s("em",[s("strong",[t._v("hash slot")])]),t._v("）， 数据库中的每个键都属于这 "),s("em",[s("strong",[t._v("16384")])]),t._v(" 个插槽的其中一个。")]),t._v(" "),s("p",[t._v("集群使用公式 "),s("em",[s("strong",[t._v("CRC16(key) % 16384")])]),t._v(" 来计算键 "),s("em",[s("strong",[t._v("key")])]),t._v(" 属于哪个槽， 其中 "),s("em",[s("strong",[t._v("CRC16(key)")])]),t._v(" 语句用于计算键 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的 "),s("em",[s("strong",[t._v("CRC16")])]),t._v(" 校验和 。"),s("strong",[t._v("根据key值计算位置，类似hashcode，因为key值是相对随机的，也就把写操作平均分配给了3三台主机，平均了写压力。这样就起到了负载均衡的效果")])]),t._v(" "),s("p",[t._v("集群中的每个节点负责处理一部分插槽。 例如， 如果一个集群可以有主节点， 其中：")]),t._v(" "),s("ul",[s("li",[t._v("节点 "),s("em",[s("strong",[t._v("A")])]),t._v(" 负责处理 "),s("em",[s("strong",[t._v("0")])]),t._v(" 号至 "),s("em",[s("strong",[t._v("5460")])]),t._v(" 号插槽。")]),t._v(" "),s("li",[t._v("节点 "),s("em",[s("strong",[t._v("B")])]),t._v(" 负责处理 "),s("em",[s("strong",[t._v("5461")])]),t._v(" 号至 "),s("em",[s("strong",[t._v("10922")])]),t._v(" 号插槽。")]),t._v(" "),s("li",[t._v("节点 "),s("em",[s("strong",[t._v("C")])]),t._v(" 负责处理 "),s("em",[s("strong",[t._v("10923")])]),t._v(" 号至 "),s("em",[s("strong",[t._v("16383")])]),t._v(" 号插槽。")])]),t._v(" "),s("p",[t._v("插槽不会满？储存结构是数组+链表？")])]),t._v(" "),s("h3",{attrs:{id:"如何在集群中录入值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在集群中录入值"}},[t._v("#")]),t._v(" 如何在集群中录入值？")]),t._v(" "),s("blockquote",[s("p",[t._v("在 "),s("em",[s("strong",[t._v("redis-cli")])]),t._v(" 每次录入、查询键值，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 都会计算出该 "),s("em",[s("strong",[t._v("key")])]),t._v(" 应该送往的插槽，如果不是该客户端对应服务器的插槽，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 会报错，并告知应前往的 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 实例地址和端口。")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("redis-cli")])]),t._v(" 客户端提供了 "),s("em",[s("strong",[t._v("–c")])]),t._v(" 参数实现自动重定向。")]),t._v(" "),s("p",[t._v("例如 "),s("em",[s("strong",[t._v("redis-cli -c –p 6379")])]),t._v(" 登入后，再录入、查询键值对可以自动重定向。")])]),t._v(" "),s("p",[s("strong",[t._v("重点")]),t._v("：")]),t._v(" "),s("blockquote",[s("p",[t._v("不在一个slot下的键值，是不能使用mget,mset等多键操作。")]),t._v(" "),s("p",[t._v("可以通过{}来定义组的概念，从而使key中{大括号}内相同内容的键值对放到一个slot中去")]),t._v(" "),s("p",[t._v("在集群中不可以一下子插入多个key，因为一次只能计算一个key。要想插入多个值，需要给这些值分组，一次只能插入一个组的内容，并且从根据key计算插槽变为根据组名计算插槽，这几个key作为组插到一个插槽里。比如：mset name{user} lucy age{user} 20;")]),t._v(" "),s("p",[t._v("根据user计算组位置，然后重定向到目标主机，插入组，组内包含两个key。相当于一个插槽放了两个key")])]),t._v(" "),s("h3",{attrs:{id:"如何查询集群中的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何查询集群中的值"}},[t._v("#")]),t._v(" 如何查询集群中的值？")]),t._v(" "),s("blockquote",[s("p",[t._v("每个主机只能查询自己范围内部的插槽。")]),t._v(" "),s("p",[s("code",[t._v("cluster keyslot <key>")]),t._v("：查询某个 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的 **"),s("em",[t._v("slot")]),t._v(" **。")]),t._v(" "),s("p",[s("code",[t._v("cluster countkeysinslot <slot>")]),t._v("：查询某个 "),s("em",[s("strong",[t._v("slot")])]),t._v(" 有多少个key。"),s("strong",[t._v("但是这种情况下，不会重定向，所以只能查询所在的主机里的插槽内容，查询其他主机的插槽返回值为0，不能踢皮球了")])]),t._v(" "),s("p",[s("code",[t._v("CLUSTER GETKEYSINSLOT <slot><count>")]),t._v("：返回 "),s("em",[s("strong",[t._v("count")])]),t._v(" 个 "),s("em",[s("strong",[t._v("slot")])]),t._v(" 槽中的键。")])]),t._v(" "),s("h3",{attrs:{id:"故障恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#故障恢复"}},[t._v("#")]),t._v(" 故障恢复？")]),t._v(" "),s("blockquote",[s("p",[t._v("如果主节点下线？从节点自动升为主节点。反客为主。注意："),s("em",[s("strong",[t._v("15")])]),t._v(" 秒超时。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(683),alt:""}}),t._v(" "),s("ul",[s("li",[t._v("当 "),s("em",[s("strong",[t._v("6379")])]),t._v(" 挂掉后，"),s("em",[s("strong",[t._v("6389")])]),t._v(" 成为新的主机。")])]),t._v(" "),s("p",[t._v("主节点恢复后，主从关系会如何？主节点回来变成从机。")]),t._v(" "),s("ul",[s("li",[t._v("当 "),s("em",[s("strong",[t._v("6379")])]),t._v(" 重启后，"),s("em",[s("strong",[t._v("6379")])]),t._v(" 成为 "),s("em",[s("strong",[t._v("6389")])]),t._v(" 的从机。")])]),t._v(" "),s("p",[t._v("如果所有某一段插槽的"),s("strong",[t._v("主从节点都宕掉")]),t._v("，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 服务是否还能继续?这个需要看你redis.conf配置是什么")]),t._v(" "),s("ul",[s("li",[t._v("如果某一段插槽的主从都挂掉，而 "),s("em",[s("strong",[t._v("cluster-require-full-coverage=yes")])]),t._v("，那么 ，整个集群都挂掉。")]),t._v(" "),s("li",[t._v("如果某一段插槽的主从都挂掉，而 "),s("em",[s("strong",[t._v("cluster-require-full-coverage=no")])]),t._v("，那么，该插槽数据全都不能使用，也无法存储。其他正常的插槽还可以运行的。")])]),t._v(" "),s("p",[s("code",[t._v("redis.conf")]),t._v(" 中的参数 "),s("code",[t._v("cluster-require-full-coverage")])])]),t._v(" "),s("h2",{attrs:{id:"集群的jedis开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群的jedis开发"}},[t._v("#")]),t._v(" 集群的Jedis开发")]),t._v(" "),s("p",[t._v("即使连接的不是主机，集群会自动切换主机存储。主机写，从机读。")]),t._v(" "),s("p",[t._v("无中心化主从集群。无论从哪台主机写的数据，其他主机上都能读到数据。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisClusterTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HostAndPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HostAndPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HostAndPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.31.211"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//但是如果6379挂了，还能用jedis操作吗？")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisCluster")]),t._v(" jedisCluster"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisCluster")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     jedisCluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedisCluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"优点-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点-3"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("实现扩容；")]),t._v(" "),s("li",[t._v("分摊压力；")]),t._v(" "),s("li",[t._v("无中心配置相对简单。")])]),t._v(" "),s("h2",{attrs:{id:"缺点-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点-3"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("多键操作是不被支持的（比较麻烦）；")]),t._v(" "),s("li",[t._v("多键的 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 事务是不被支持的。"),s("em",[s("strong",[t._v("lua")])]),t._v(" 脚本不被支持；")]),t._v(" "),s("li",[t._v("由于集群方案出现较晚，很多公司已经采用了其他的集群方案，而代理或者客户端分片的方案想要迁移至***redis cluster***，需要整体迁移而不是逐步过渡，复杂度较大。")])]),t._v(" "),s("h1",{attrs:{id:"jedis操作redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jedis操作redis"}},[t._v("#")]),t._v(" Jedis操作Redis")]),t._v(" "),s("h2",{attrs:{id:"基础操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础操作"}},[t._v("#")]),t._v(" 基础操作")]),t._v(" "),s("p",[t._v("即 "),s("em",[s("strong",[t._v("Java")])]),t._v(" 操作 "),s("em",[s("strong",[t._v("Redis")])]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("依赖")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("redis.clients"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("jedis"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3.2.0"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("连接 "),s("em",[s("strong",[t._v("Redis")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jedis")]),t._v(" jedis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jedis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.57.101"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pong "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接成功："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" pong"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("em",[s("strong",[t._v("Key")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exists")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ttl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("em",[s("strong",[t._v("String")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("em",[s("strong",[t._v("List")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lrange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mylist"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[s("strong",[t._v("Set")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order02"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order03"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order04"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" smembers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("smembers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" order "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" smembers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("srem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order02"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("em",[s("strong",[t._v("Hash")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lisi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"telphone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"13810169999"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"atguigu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc@163.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hmset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hmget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"telphone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[s("strong",[t._v("zset")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zset01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zset01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"l4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zset01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zset01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" zrange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zrange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zset01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" zrange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"jedis-主从复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jedis-主从复制"}},[t._v("#")]),t._v(" "),s("em",[t._v("Jedis")]),t._v(" 主从复制")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisSentinelPool")]),t._v(" jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jedis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getJedisFromSentinel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" sentinelSet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.16.88.168:26379"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 端口为sentinal")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisPoolConfig")]),t._v(" jedisPoolConfig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisPoolConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxTotal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大可用连接数")]),t._v("\n    jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxIdle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大闲置连接数")]),t._v("\n    jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMinIdle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最小闲置连接数")]),t._v("\n    jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBlockWhenExhausted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接耗尽是否等待")]),t._v("\n    jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxWaitMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待时间")]),t._v("\n    jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTestOnBorrow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取连接的时候进行测试")]),t._v("\n\n    jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisSentinelPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mymaster"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jedisPoolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务主机名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jedisSentinelPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"集群的-jedis-开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群的-jedis-开发"}},[t._v("#")]),t._v(" 集群的 "),s("em",[t._v("Jedis")]),t._v(" 开发")]),t._v(" "),s("p",[t._v("即使连接的不是主机，集群会自动切换主机存储。主机写，从机读。")]),t._v(" "),s("p",[t._v("无中心化主从集群。无论从哪台主机写的数据，其他主机上都能读到数据。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisClusterTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HostAndPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HostAndPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HostAndPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.16.88.168"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任何一个端口")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisCluster")]),t._v(" jedisCluster "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisCluster")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     jedisCluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedisCluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h1",{attrs:{id:"springboot整合redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot整合redis"}},[t._v("#")]),t._v(" SpringBoot整合Redis")]),t._v(" "),s("ol",[s("li",[t._v("依赖")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- redis --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-redis"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- spring2.X集成redis所需common-pool2--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.commons"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("commons-pool2"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.6.0"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- springboot starter web 配合RedisTemplate生成--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.7.3"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("配置文件配置 "),s("em",[s("strong",[t._v("Redis")])])])]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Redis服务器地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("ip地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Redis服务器连接端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("6379")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Redis数据库索引（默认为0）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.database")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接超时时间（毫秒）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("1800000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接池最大连接数（使用负值表示没有限制）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.lettuce.pool.max-active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最大阻塞等待时间(负数表示没限制)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.lettuce.pool.max-wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("-1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接池中的最大空闲连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.lettuce.pool.max-idle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接池中的最小空闲连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.redis.lettuce.pool.min-idle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("em",[s("strong",[t._v("Redis")])]),t._v(" 配置类（需要继承 "),s("em",[s("strong",[t._v("CachingConfigurerSupport")])]),t._v("）")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableCaching")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CachingConfigurerSupport")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redisTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConnectionFactory")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisSerializer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" redisSerializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jackson2JsonRedisSerializer")]),t._v(" jackson2JsonRedisSerializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jackson2JsonRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),t._v(" om "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVisibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyAccessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonAutoDetect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ANY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableDefaultTyping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DefaultTyping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NON_FINAL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setObjectMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConnectionFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key序列化方式")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setKeySerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value序列化")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValueSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value hashmap序列化")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHashValueSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CacheManager")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cacheManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConnectionFactory")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisSerializer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" redisSerializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jackson2JsonRedisSerializer")]),t._v(" jackson2JsonRedisSerializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jackson2JsonRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解决查询缓存转换异常的问题")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),t._v(" om "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVisibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyAccessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonAutoDetect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ANY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableDefaultTyping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DefaultTyping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NON_FINAL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setObjectMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置序列化（解决乱码的问题）,过期时间600秒")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisCacheConfiguration")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n          "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisCacheConfiguration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultCacheConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entryTtl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("serializeValuesWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisSerializationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SerializationPair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("disableCachingNullValues")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisCacheManager")]),t._v(" cacheManager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisCacheManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cacheDefaults")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cacheManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("测试redis")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atguigu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jedis_springboot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beans"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Autowired")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GetMapping")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMapping")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestController")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @author shr567\n * @create 2022/9/8 - 8:50\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/redisTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lucy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h1",{attrs:{id:"秒杀并发模拟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#秒杀并发模拟"}},[t._v("#")]),t._v(" 秒杀并发模拟")]),t._v(" "),s("h2",{attrs:{id:"操作步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作步骤"}},[t._v("#")]),t._v(" 操作步骤")]),t._v(" "),s("p",[s("strong",[t._v("使用工具ab模拟测试")])]),t._v(" "),s("p",[t._v("CentOS6 默认安装")]),t._v(" "),s("p",[t._v("CentOS7需要手动安装")]),t._v(" "),s("p",[s("strong",[t._v("联网情况下：yum install httpd-tools")])]),t._v(" "),s("p",[s("strong",[t._v("无网络：")])]),t._v(" "),s("p",[t._v("（1） 进入cd /run/media/root/CentOS 7 x86_64/Packages（路径跟centos6不同）")]),t._v(" "),s("p",[t._v("（2） 顺序安装")]),t._v(" "),s("p",[t._v("apr-1.4.8-3.el7.x86_64.rpm")]),t._v(" "),s("p",[t._v("apr-util-1.5.2-6.el7.x86_64.rpm")]),t._v(" "),s("p",[t._v("httpd-tools-2.4.6-67.el7.centos.x86_64.rpm")]),t._v(" "),s("p",[s("strong",[t._v("测试及结果")])]),t._v(" "),s("p",[s("strong",[t._v("通过ab测试")])]),t._v(" "),s("p",[t._v("ab --help 查看ab工具的命令帮助")]),t._v(" "),s("blockquote",[s("p",[t._v("vim postfile 模拟表单提交参数,以&符号结尾;存放当前目录。内容：prodid=0101&")]),t._v(" "),s("p",[t._v("ab -n 2000 -c 200 -k -p ~/postfile -T application/x-www-form-urlencoded http://192.168.2.115:8081/Seckill/doseckill")])]),t._v(" "),s("p",[t._v("-n:请求次数")]),t._v(" "),s("p",[t._v("-c:并发次数")]),t._v(" "),s("p",[t._v("-T:采用post/put提交时需要设置提交的内容类型")]),t._v(" "),s("p",[s("img",{attrs:{src:a(684),alt:"image-20220909104246443"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(685),alt:"image-20220909104335139"}})]),t._v(" "),s("p",[t._v("-p:post所带的文件，模拟的时候这个文件就需要在本地创建，模拟真实传递过来的文件")]),t._v(" "),s("h2",{attrs:{id:"乐观锁解决秒杀超卖问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁解决秒杀超卖问题"}},[t._v("#")]),t._v(" 乐观锁解决秒杀超卖问题")]),t._v(" "),s("p",[s("img",{attrs:{src:a(686),alt:"image-20220909165340676"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//增加乐观锁")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qtkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.判断库存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" qtkeystr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qtkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qtkeystr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qtkeystr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"未初始化库存"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" qt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qtkeystr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"已经秒光"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//增加事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transaction")]),t._v(" multi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("multi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.减少库存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//jedis.decr(qtkey);")]),t._v("\nmulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qtkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5.加人")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//jedis.sadd(usrkey, uid);")]),t._v("\nmulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sadd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("usrkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" multi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断事务提交是否失败")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"秒杀失败"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"秒杀成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"连接池解决超时问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接池解决超时问题"}},[t._v("#")]),t._v(" 连接池解决超时问题")]),t._v(" "),s("p",[t._v("节省每次连接redis服务带来的时间消耗，把连接好的实例反复利用。")]),t._v(" "),s("p",[t._v("通过参数管理连接的行为")]),t._v(" "),s("p",[t._v("代码见项目中")]),t._v(" "),s("p",[t._v("链接池参数")]),t._v(" "),s("ul",[s("li",[t._v("MaxTotal：控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取；如果赋值为-1，则表示不限制；如果pool已经分配了MaxTotal个jedis实例，则此时pool的状态为exhausted。")]),t._v(" "),s("li",[t._v("maxIdle：控制一个pool最多有多少个状态为idle(空闲)的jedis实例；")]),t._v(" "),s("li",[t._v("MaxWaitMillis：表示当borrow一个jedis实例时，最大的等待毫秒数，如果超过等待时间，则直接抛JedisConnectionException；")]),t._v(" "),s("li",[t._v("testOnBorrow：获得一个jedis实例的时候是否检查连接可用性（ping()）；如果为true，则得到的jedis实例均是可用的；")])]),t._v(" "),s("h2",{attrs:{id:"lua脚本代替乐观锁解决库存遗留问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lua脚本代替乐观锁解决库存遗留问题"}},[t._v("#")]),t._v(" lua脚本代替乐观锁解决库存遗留问题")]),t._v(" "),s("h3",{attrs:{id:"问题背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题背景"}},[t._v("#")]),t._v(" 问题背景")]),t._v(" "),s("p",[t._v("如果秒杀请求的次数不够足够多，就会因为乐观锁的机制，导致一定数量请求失败，这就造成了库存遗留问题。于是我们弃用乐观锁，改用lua脚本进行操作，效果相当于悲观锁，但是实际上是让redis串行化执行命令，具体解释")]),t._v(" "),s("h3",{attrs:{id:"lua脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lua脚本"}},[t._v("#")]),t._v(" LUA脚本")]),t._v(" "),s("p",[t._v("Lua 是一个小巧的"),s("a",{attrs:{href:"http://baike.baidu.com/item/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("脚本语言"),s("OutboundLink")],1),t._v("，Lua脚本可以很容易的被C/C++ 代码调用，也可以反过来调用C/C++的函数，Lua并没有提供强大的库，一个完整的Lua解释器不过200k，所以Lua不适合作为开发独立应用程序的语言，而是作为嵌入式脚本语言。")]),t._v(" "),s("p",[t._v("很多应用程序、游戏使用LUA作为自己的嵌入式脚本语言，以此来实现可配置性、可扩展性。")]),t._v(" "),s("p",[t._v("这其中包括魔兽争霸地图、魔兽世界、博德之门、愤怒的小鸟等众多游戏插件或外挂。")]),t._v(" "),s("h3",{attrs:{id:"lua脚本在redis中的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lua脚本在redis中的优势"}},[t._v("#")]),t._v(" LUA脚本在Redis中的优势")]),t._v(" "),s("p",[t._v("将"),s("strong",[t._v("复杂的或者多步的redis操作，写为一个脚本，一次提交给redis执行，减少反复连接redis的次数。提升性能。")])]),t._v(" "),s("p",[t._v("LUA脚本是"),s("strong",[t._v("类似redis事务")]),t._v("，有"),s("strong",[t._v("一定的原子性")]),t._v("，"),s("strong",[t._v("不会被其他命令插队")]),t._v("，可以完成一些redis事务性的操作,但不是悲观锁，算是一种"),s("strong",[t._v("串行化执行")]),t._v("。")]),t._v(" "),s("p",[t._v("但是注意redis的lua脚本功能，只有在Redis 2.6以上的版本才可以使用。")]),t._v(" "),s("p",[s("strong",[t._v("利用lua脚本淘汰用户，解决超卖问题。")])]),t._v(" "),s("p",[t._v("redis 2.6版本以后，通过lua脚本解决"),s("strong",[t._v("争抢问题")]),t._v("，实际上是"),s("strong",[t._v("redis")]),t._v(" "),s("strong",[t._v("利用其单线程的特性，用任务队列的方式解决多任务并发问题")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(687),alt:"image-20220909175049552"}})]),t._v(" "),s("p",[t._v("相当于把操作全写在一个lua脚本中，然后让redis利用单线程解决这些脚本中的命令，有其原子性")]),t._v(" "),s("h3",{attrs:{id:"具体脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体脚本"}},[t._v("#")]),t._v(" 具体脚本")]),t._v(" "),s("p",[t._v("能看懂即可")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("local userid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KEYS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nlocal prodid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KEYS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlocal qtkey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sk:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prodid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":qt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlocal usersKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sk:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prodid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("usr'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nlocal userExists"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sismember"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("usersKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("userid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tonumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userExists"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" then \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nend\nlocal num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("qtkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tonumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" then \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n  redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"decr"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("qtkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sadd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("usersKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("userid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nend\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h1",{attrs:{id:"redis悲观锁、乐观锁和调用lua脚本的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis悲观锁、乐观锁和调用lua脚本的优缺点"}},[t._v("#")]),t._v(" Redis悲观锁、乐观锁和调用Lua脚本的优缺点")]),t._v(" "),s("p",[s("strong",[t._v("悲观锁使用了数据库的锁机制，可以消除数据不一致性")]),t._v("，对于开发者而言会十分简单，"),s("strong",[t._v("但是，使用悲观锁后，数据库的性能有所下降，因为大量的线程都会被阻塞，而且需要有大量的恢复过程，需要进一步改变算法以提高系统的并发能力。")])]),t._v(" "),s("p",[t._v("通过 CAS 原理和 ABA 问题的讨论，我们更加明确了乐观锁的原理，使用乐观锁有助于提高并发性能，但是由于版本号冲突，乐观锁导致多次请求服务失败的概率大大提高，而我们通过重入（按时间戳或者按次数限定）来提高成功的概率，这样对于乐观锁而言实现的方式就相对复杂了，其性能也会随着版本号冲突的概率提升而提升，并不稳定。")]),t._v(" "),s("p",[t._v("**使用乐观锁的弊端在于，导致大量的 SQL 被执行，对于数据库的性能要求较高，容易引起数据库性能的瓶颈，**而且对于开发还要考虑重入机制，从而导致开发难度加大。")]),t._v(" "),s("p",[s("strong",[t._v("使用 Redis 去实现高并发，通过 Redis 提供的 Lua 脚本的原子性，消除了数据不一致性，并且在整个过程中只有最后一次涉及数据库，而且是使用了新的线程。")])]),t._v(" "),s("p",[t._v("在实际操作中更加倾向于使用 JMS 启动另外的服务器进行操作。但是这样使用的风险在于 Redis 的不稳定性，因为其事务和存储都存在不稳定的因素，所以更多的时候，建议使用独立 Redis 服务器做高并发业务，一方面可以提高 Redis 的性能，另一方面即使在高并发的场合，Redis 服务器宕机也不会影响现有的其他业务，同时也可以使用备机等设备提高系统的高可用，保证网站的安全稳定。")]),t._v(" "),s("h1",{attrs:{id:"应用问题解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用问题解决"}},[t._v("#")]),t._v(" 应用问题解决")]),t._v(" "),s("h2",{attrs:{id:"缓存穿透"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[t._v("#")]),t._v(" 缓存穿透")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(688)}}),t._v(" "),s("h3",{attrs:{id:"现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现象"}},[t._v("#")]),t._v(" 现象")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("key")])]),t._v(" 对应的数据在数据源并不存在，每次针对此 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的请求从缓存获取不到，请求都会压到数据源（数据库），从而可能压垮数据源。")]),t._v(" "),s("p",[t._v("比如用一个不存在的用户 "),s("em",[s("strong",[t._v("id")])]),t._v(" 获取用户信息，不论缓存还是数据库都没有，若"),s("strong",[t._v("黑客利用此漏洞进行攻击可能压垮数据库")]),t._v("。")]),t._v(" "),s("p",[t._v("造成：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("应用服务器压力变大")]),t._v("。")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("redis")])]),t._v(" 命中率下降，就会开始查询数据库，徒增数据库压力 。")])]),t._v(" "),s("h3",{attrs:{id:"如何解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决"}},[t._v("#")]),t._v(" 如何解决")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("对空值缓存")])]),t._v(" "),s("p",[t._v("如果一个查询返回的数据为空（不管是数据是否不存在），仍然把这个空结果（"),s("em",[s("strong",[t._v("null")])]),t._v("）进行缓存，设置空结果的过期时间会很短，最长不超过五分钟。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("设置可访问的名单（白名单）：")])]),t._v(" "),s("p",[t._v("使用 "),s("em",[s("strong",[t._v("bitmaps")])]),t._v(" 类型定义一个可以访问的名单，名单 "),s("em",[s("strong",[t._v("id")])]),t._v(" 作为 "),s("em",[s("strong",[t._v("bitmaps")])]),t._v(" 的偏移量，每次访问和 "),s("em",[s("strong",[t._v("bitmap")])]),t._v(" 里面的 "),s("em",[s("strong",[t._v("id")])]),t._v(" 进行比较，如果访问 "),s("em",[s("strong",[t._v("id")])]),t._v(" 不在 "),s("em",[s("strong",[t._v("bitmaps")])]),t._v(" 里面，进行拦截，则不允许访问。但是这样依然会多次访问redis缓存。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("采用布隆过滤器")])]),t._v(" "),s("p",[t._v("布隆过滤器（"),s("em",[s("strong",[t._v("Bloom Filter")])]),t._v("）是1970年由布隆提出的。它实际上是一个很长的二进制向量（位图）和一系列随机映射函数（哈希函数）。")]),t._v(" "),s("p",[t._v("布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。")]),t._v(" "),s("p",[t._v("将所有可能存在的数据哈希到一个足够大的 "),s("em",[s("strong",[t._v("bitmaps")])]),t._v(" 中，一个一定不存在的数据会被这个 "),s("em",[s("strong",[t._v("bitmaps")])]),t._v(" 拦截掉，从而避免了对底层存储系统的查询压力。原理和设置名单差不多。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("进行实时监控")])]),t._v(" "),s("p",[t._v("当发现 "),s("em",[s("strong",[t._v("Redis")])]),t._v(" 的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，可以设置黑名单限制服务，禁止ip。第一时间拨打网警。")])])]),t._v(" "),s("h2",{attrs:{id:"缓存击穿"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿"}},[t._v("#")]),t._v(" 缓存击穿")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(689)}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("key")])]),t._v(" 对应的数据存在，但在 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端***DB*** 加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端 "),s("em",[s("strong",[t._v("DB")])]),t._v(" 压垮。即某个经常访问的 "),s("em",[s("strong",[t._v("key")])]),t._v(" 过期，突然有大量访问这个数据")]),t._v(" "),s("ol",[s("li",[t._v("数据库访问压力瞬间增大。")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("redis")])]),t._v(" 中没有出现大量 "),s("em",[s("strong",[t._v("key")])]),t._v(" 过期，只是少量的key过期，"),s("em",[s("strong",[t._v("redis")])]),t._v(" 正常运行。")])]),t._v(" "),s("h3",{attrs:{id:"如何解决-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决-2"}},[t._v("#")]),t._v(" 如何解决")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("预先设置热门数据")]),t._v(" "),s("p",[t._v("在 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 高峰访问之前，把一些热门数据提前存入到 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 里面，加大这些热门数据 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的时长。")])]),t._v(" "),s("li",[s("p",[t._v("实时调整")]),t._v(" "),s("p",[t._v("现场监控哪些数据热门，实时调整 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的过期时长。")])]),t._v(" "),s("li",[s("p",[t._v("使用锁")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db。")])]),t._v(" "),s("li",[s("p",[t._v("先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX）去set一个mutex key")])]),t._v(" "),s("li",[s("p",[t._v("当操作返回成功时，再进行load db的操作，并回设缓存,最后删除mutex key；")])]),t._v(" "),s("li",[s("p",[t._v("当操作返回失败，证明有线程在load db，当前线程睡眠一段时间再重试整个get缓存的方法。")])])])])]),t._v(" "),s("h3",{attrs:{id:"缓存穿透与击穿的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透与击穿的区别"}},[t._v("#")]),t._v(" 缓存穿透与击穿的区别")]),t._v(" "),s("ul",[s("li",[t._v("缓存穿透是指，大量查询不存在的缓存，缓存命中率下降，导致查询数据库，"),s("strong",[t._v("没有起到缓冲压力的作用")])]),t._v(" "),s("li",[t._v("而缓存击穿是指，某个存在缓存失效，瞬时的并发打到数据库。")])]),t._v(" "),s("h2",{attrs:{id:"缓存雪崩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[t._v("#")]),t._v(" 缓存雪崩")]),t._v(" "),s("p",[t._v("大量***key*** 对应的数据存在，但在 "),s("em",[s("strong",[t._v("redis")])]),t._v(" 中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端***DB*** 加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端 "),s("em",[s("strong",[t._v("DB")])]),t._v(" 压垮。")]),t._v(" "),s("h3",{attrs:{id:"如何解决-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决-3"}},[t._v("#")]),t._v(" 如何解决")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("构建多级缓存架构")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("nginx")])]),t._v(" 缓存 + "),s("em",[s("strong",[t._v("redis")])]),t._v(" 缓存 + 其他缓存（***ehcache***等）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("使用锁或队列：")])]),t._v(" "),s("p",[t._v("用加锁或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。不适用高并发情况。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("设置过期标志更新缓存：")])]),t._v(" "),s("p",[t._v("记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程在后台去更新实际 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的缓存。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("将缓存失效时间分散开：")])]),t._v(" "),s("p",[t._v("比如我们可以在原有的失效时间基础上增加一个随机值，比如 1～5 分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。")])])]),t._v(" "),s("h3",{attrs:{id:"缓存雪崩与缓存击穿的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩与缓存击穿的区别"}},[t._v("#")]),t._v(" 缓存雪崩与缓存击穿的区别")]),t._v(" "),s("p",[t._v("缓存雪崩与缓存击穿的区别在于这里针对很多 "),s("em",[s("strong",[t._v("key")])]),t._v(" 缓存，前者则是某一个 "),s("em",[s("strong",[t._v("key")])]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("数据库压力变大。")]),t._v(" "),s("li",[t._v("即极少的时间段，查询大量 "),s("em",[s("strong",[t._v("key")])]),t._v(" 的"),s("strong",[t._v("集中过期")]),t._v("情况。")])]),t._v(" "),s("h1",{attrs:{id:"分布式锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),s("h2",{attrs:{id:"问题描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),s("p",[t._v("​\t随着业务发展的需要，原"),s("strong",[t._v("单体单机部署的系统被演化成分布式集群系统后")]),t._v("，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的"),s("strong",[t._v("并发控制锁策略失效")]),t._v("，单纯的Java API并不能提供分布式锁的能力。为了解决这个问题就需要一种跨JVM的互斥机制来控制共享资源的访问，这就是分布式锁要解决的问题！")]),t._v(" "),s("p",[s("strong",[t._v("分布式锁主流的实现方案")]),t._v("：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("基于数据库实现分布式锁")])]),t._v(" "),s("li",[s("p",[t._v("基于缓存（Redis等）")])]),t._v(" "),s("li",[s("p",[t._v("基于Zookeeper")])])]),t._v(" "),s("p",[t._v("每一种"),s("strong",[t._v("分布式锁解决方案都有各自的优缺点")]),t._v("：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("性能：redis最高")])]),t._v(" "),s("li",[s("p",[t._v("可靠性：zookeeper最高")])])]),t._v(" "),s("p",[t._v("这里，我们就基于redis实现分布式锁。")]),t._v(" "),s("h2",{attrs:{id:"使用redis实现分布式锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用redis实现分布式锁"}},[t._v("#")]),t._v(" 使用redis实现分布式锁")]),t._v(" "),s("p",[s("img",{attrs:{src:a(690),alt:"image-20220911223657493"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("多个客户端同时获取锁（setnx）")])]),t._v(" "),s("li",[s("p",[t._v("获取成功，执行业务逻辑{从db获取数据，放入缓存}，执行完成释放锁（del）")])]),t._v(" "),s("li",[s("p",[t._v("其他客户端等待重试")])])]),t._v(" "),s("h3",{attrs:{id:"命令-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令-4"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),t._v(" nx px "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# EX second ：设置键的过期时间为 second 秒。 SET key value EX second 效果等同于 SETEX key second value 。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# PX millisecond ：设置键的过期时间为 millisecond 毫秒。 SET key value PX millisecond 效果等同于 PSETEX key millisecond value 。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NX ：只在键不存在时，才对键进行设置操作。 SET key value NX 效果等同于 SETNX key value 。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# XX ：只在键已经存在时，才对键进行设置操作。")]),t._v("\n\ndel user "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示释放锁")]),t._v("\n")])])]),s("h3",{attrs:{id:"编写java代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写java代码"}},[t._v("#")]),t._v(" 编写Java代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testLock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1获取锁，setne")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("lean lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"111"')]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECONDS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//setnx,并且设置过期时间为3s，防止出现异常，无法释放锁")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2获取锁成功、查询num的值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.1判断num为空return")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.2有值就转成成int")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.3把redis的num加1")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.4释放锁，del")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3获取锁失败、每隔0.1秒再获取")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"uuid防止误删"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uuid防止误删"}},[t._v("#")]),t._v(" UUID防止误删")]),t._v(" "),s("p",[s("strong",[t._v("问题：可能会释放其他服务器的锁")])]),t._v(" "),s("blockquote",[s("p",[t._v("场景：如果业务逻辑的执行时间是7s。执行流程如下")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("index1业务逻辑没执行完，3秒后锁被自动释放。")])]),t._v(" "),s("li",[s("p",[t._v("index2获取到锁，执行业务逻辑，3秒后锁被自动释放。")])]),t._v(" "),s("li",[s("p",[t._v("index3获取到锁，执行业务逻辑")])]),t._v(" "),s("li",[s("p",[t._v("index1业务逻辑执行完成，开始调用del释放锁，这时释放的是index3的锁，导致index3的业务只执行1s就被别人释放。")])])]),t._v(" "),s("p",[t._v("最终等于没锁的情况。")])]),t._v(" "),s("p",[t._v("解决："),s("strong",[t._v("setnx获取锁时，设置对应value为一个指定的唯一值（例如：uuid）；释放前获取这个值，判断是否自己的锁")]),t._v("。这种方法设置的其实还是一个共享锁，因为前后加的锁的key值还是一样的，但是每个主机在删除的时候只能删除对应自己的uuid的key")]),t._v(" "),s("p",[t._v("于是我们优化以上的java代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testLock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0.1 设置value为uuid，")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" uuid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UUID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1获取锁，setne")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("lean lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uuid，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECONDS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//setnx,并且设置过期时间为3s，防止出现异常，无法释放锁")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2获取锁成功、查询num的值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.1判断num为空return")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.2有值就转成成int")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.3把redis的num加1")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uuid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.4释放锁，del")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3获取锁失败、每隔0.1秒再获取")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"lua保证删除原子性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lua保证删除原子性"}},[t._v("#")]),t._v(" LUA保证删除原子性")]),t._v(" "),s("p",[t._v("场景:")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("index1执行删除时，查询到的lock值确实和uuid相等")])]),t._v(" "),s("p",[t._v("uuid=v1")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("index1执行删除前，lock刚好过期时间已到，被redis自动释放")])]),t._v(" "),s("p",[t._v("在redis中没有了lock，没有了锁。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("index2获取了lock")])]),t._v(" "),s("p",[t._v("index2线程获取到了cpu的资源，开始执行方法")]),t._v(" "),s("p",[t._v("uuid=v2")]),t._v(" "),s("p",[t._v("set(lock,uuid)；")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("index1执行删除，此时会把index2的lock删除，index2就没有锁了")])])]),t._v(" "),s("p",[t._v("使用lua脚本优化java代码")]),t._v(" "),s("p",[s("strong",[t._v("在业务操作结束和删除锁之间使用lua脚本操作来删除锁，保证原子性，防止被其他命令干扰,比如使锁过期的命令")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testLockLua"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLockLua")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 声明一个uuid ,将做为一个value 放入我们的key所对应的值中")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" uuid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UUID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 定义一个锁：lua 脚本可以使用同一把锁，来实现删除！")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" skuId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问skuId 为25号的商品 100008348542")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" locKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" skuId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁住的是每个商品的数据")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 获取锁")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("locKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uuid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECONDS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一种： lock 与过期时间中间不写任何的代码。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// redisTemplate.expire("lock",10, TimeUnit.SECONDS);//设置过期时间')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行的业务逻辑开始")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取缓存中的num 数据")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是空直接返回")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是空 如果说在这出现了异常！ 那么delete 就删除失败！ 也就是说锁永远存在！")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使num 每次+1 放入缓存")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//***************************************************************//")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在操作结束和删除锁之间进行lua操作，保证原子性，防止被其他命令干扰,比如使锁过期的命令")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*使用lua脚本来锁*/")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义lua 脚本")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" script "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"if redis.call('get', KEYS[1]) == ARGV[1] then return redis.call('del', KEYS[1]) else return 0 end\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用redis执行lua执行")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultRedisScript")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" redisScript "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultRedisScript")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        redisScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScriptText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置一下返回值类型 为Long")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为删除判断的时候，返回的0,给其封装为数据类型。如果不封装那么默认返回String 类型，")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么返回字符串与0 会有发生错误。")]),t._v("\n        redisScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setResultType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个要是script 脚本 ，第二个需要判断的key，第三个就是key所对应的值。")]),t._v("\n        redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redisScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("locKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uuid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//原子性删除完成************************************************//")]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他线程等待")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 睡眠")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 睡醒了之后，调用方法。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLockLua")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h1",{attrs:{id:"redis6-0新功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis6-0新功能"}},[t._v("#")]),t._v(" Redis6.0新功能")]),t._v(" "),s("h2",{attrs:{id:"acl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acl"}},[t._v("#")]),t._v(" ACL")]),t._v(" "),s("p",[t._v("Redis ACL是Access Control List（访问控制列表）的缩写，该功能允许根据可以执行的命令和可以访问的键来限制某些连接。\n在Redis 5版本之前，Redis 安全规则只有密码控制 还有通过rename 来调整高危命令比如 flushdb ， KEYS* ， shutdown 等。Redis 6 则提供ACL的功能对用户进行更细粒度的权限控制 ：\n（1）接入权限:用户名和密码\n（2）可以执行的命令\n（3）可以操作的 KEY\n参考官网：https://redis.io/topics/acl")]),t._v(" "),s("h2",{attrs:{id:"io多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#io多线程"}},[t._v("#")]),t._v(" IO多线程")]),t._v(" "),s("p",[t._v("Redis6终于支撑多线程了，告别单线程了吗？\n"),s("strong",[t._v("IO多线程其实指客户端交互部分的网络IO交互处理模块多线程，而非执行命令多线程。Redis6执行命令依然是单线程")]),t._v("。")]),t._v(" "),s("p",[t._v("另外，"),s("strong",[t._v("多线程IO默认也是不开启的")]),t._v("，需要再配置文件中配置\nio-threads-do-reads  yes\nio-threads 4")]),t._v(" "),s("h2",{attrs:{id:"工具支持cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工具支持cluster"}},[t._v("#")]),t._v(" 工具支持Cluster")]),t._v(" "),s("p",[t._v("之前老版Redis想要搭集群需要单独安装ruby环境，Redis 5 将 redis-trib.rb 的功能集成到 redis-cli 。另外官方 redis-benchmark 工具开始支持 cluster 模式了，通过多线程的方式对多个分片进行压测。")]),t._v(" "),s("h2",{attrs:{id:"redis新功能持续关注"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis新功能持续关注"}},[t._v("#")]),t._v(" Redis新功能持续关注")]),t._v(" "),s("p",[t._v("Redis6新功能还有：\n1、RESP3新的 Redis 通信协议：优化服务端与客户端之间通信\n2、Client side caching客户端缓存：基于 RESP3 协议实现的客户端缓存功能。为了进一步提升缓存的性能，将客户端经常访问的数据cache到客户端。减少TCP网络交互。\n3、Proxy集群代理模式：Proxy 功能，让 Cluster 拥有像单实例一样的接入方式，降低大家使用cluster的门槛。不过需要注意的是代理不改变 Cluster 的功能限制，不支持的命令还是不会支持，比如跨 slot 的多Key操作。\n4、Modules API\nRedis 6中模块API开发进展非常大，因为Redis Labs为了开发复杂的功能，从一开始就用上Redis模块。Redis可以变成一个框架，利用Modules来构建不同系统，而不需要从头开始写然后还要BSD许可。Redis一开始就是一个向编写各种系统开放的平台。")])])}),[],!1,null,null,null);s.default=e.exports}}]);